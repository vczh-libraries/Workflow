/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Workflow
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_WORKFLOW_PARSER_LEXER
#define VCZH_WORKFLOW_PARSER_LEXER

#include <VlppGlrParser.h>

namespace vl::workflow
{
	enum class WorkflowTokens : vl::vint32_t
	{
		EXP = 0,
		ADD = 1,
		SUB = 2,
		MUL = 3,
		DIV = 4,
		MOD = 5,
		JOIN = 6,
		INTERSECTION = 7,
		LE = 8,
		GE = 9,
		LT = 10,
		GT = 11,
		EQ = 12,
		NE = 13,
		ASSIGN = 14,
		FAILED_THEN = 15,
		QUESTION_MARK = 16,
		SCOPE_DELIMITER = 17,
		COLON = 18,
		SEMICOLON = 19,
		COMMA = 20,
		DOT = 21,
		OPEN_ARRAY = 22,
		CLOSE_ARRAY = 23,
		OPEN_BRACE = 24,
		CLOSE_BRACE = 25,
		OPEN_BRACKET = 26,
		CLOSE_BRACKET = 27,
		AT = 28,
		TYPE_VOID = 29,
		TYPE_OBJECT = 30,
		TYPE_INTERFACE = 31,
		TYPE_INT = 32,
		TYPE_UINT = 33,
		TYPE_FLOAT = 34,
		TYPE_DOUBLE = 35,
		TYPE_STRING = 36,
		TYPE_CHAR = 37,
		TYPE_BOOL = 38,
		KEYWORD_CONST = 39,
		KEYWORD_SHL = 40,
		KEYWORD_SHR = 41,
		KEYWORD_XOR = 42,
		KEYWORD_AND = 43,
		KEYWORD_OR = 44,
		KEYWORD_NOT = 45,
		KEYWORD_NULL = 46,
		KEYWORD_THIS = 47,
		KEYWORD_TRUE = 48,
		KEYWORD_FALSE = 49,
		KEYWORD_LET = 50,
		KEYWORD_IN = 51,
		KEYWORD_RANGE = 52,
		KEYWORD_NEW = 53,
		KEYWORD_OF = 54,
		KEYWORD_AS = 55,
		KEYWORD_IS = 56,
		KEYWORD_CAST = 57,
		KEYWORD_FUNC = 58,
		KEYWORD_TYPEOF = 59,
		KEYWORD_TYPE = 60,
		KEYWORD_BIND = 61,
		KEYWORD_OBSERVE = 62,
		KEYWORD_ON = 63,
		KEYWORD_ATTACH = 64,
		KEYWORD_DETACH = 65,
		KEYWORD_GOTO = 66,
		KEYWORD_VAR = 67,
		KEYWORD_BREAK = 68,
		KEYWORD_CONTINUE = 69,
		KEYWORD_RETURN = 70,
		KEYWORD_DELETE = 71,
		KEYWORD_RAISE = 72,
		KEYWORD_IF = 73,
		KEYWORD_ELSE = 74,
		KEYWORD_SWITCH = 75,
		KEYWORD_CASE = 76,
		KEYWORD_DEFAULT = 77,
		KEYWORD_WHILE = 78,
		KEYWORD_FOR = 79,
		KEYWORD_REVERSED = 80,
		KEYWORD_TRY = 81,
		KEYWORD_CATCH = 82,
		KEYWORD_FINALLY = 83,
		KEYWORD_CLASS = 84,
		KEYWORD_ENUM = 85,
		KEYWORD_FLAGENUM = 86,
		KEYWORD_STRUCT = 87,
		KEYWORD_PROP = 88,
		KEYWORD_EVENT = 89,
		KEYWORD_STATIC = 90,
		KEYWORD_OVERRIDE = 91,
		KEYWORD_USING = 92,
		KEYWORD_NAMESPACE = 93,
		KEYWORD_MODULE = 94,
		KEYWORD_UNIT = 95,
		STATE_MACHINE = 96,
		STATE_INPUT = 97,
		STATE_SWITCH = 98,
		STATE_GOTO = 99,
		STATE_PUSH = 100,
		STATE_DECL = 101,
		COROUTINE_COROUTINE = 102,
		COROUTINE_PAUSE = 103,
		COROUTINE_INTERFACE = 104,
		COROUTINE_OPERATOR = 105,
		COROUTINE_SIGN = 106,
		NAME = 107,
		ORDERED_NAME = 108,
		FLOAT = 109,
		INTEGER = 110,
		STRING = 111,
		FORMATSTRING = 112,
		SPACE = 113,
		COMMENT = 114,
	};

	constexpr vl::vint WorkflowTokenCount = 115;
	extern bool WorkflowTokenDeleter(vl::vint token);
	extern const wchar_t* WorkflowTokenId(WorkflowTokens token);
	extern const wchar_t* WorkflowTokenDisplayText(WorkflowTokens token);
	extern const wchar_t* WorkflowTokenRegex(WorkflowTokens token);
	extern void WorkflowLexerData(vl::stream::IStream& outputStream);
}
#endif