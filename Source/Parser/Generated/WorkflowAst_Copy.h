/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_WORKFLOW_PARSER_AST_AST_COPY_VISITOR
#define VCZH_WORKFLOW_PARSER_AST_AST_COPY_VISITOR

#include "WorkflowAst.h"

namespace vl::workflow::copy_visitor
{
	/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
	class AstVisitor
		: public virtual vl::glr::CopyVisitorBase
		, protected virtual WfType::IVisitor
		, protected virtual WfExpression::IVisitor
		, protected virtual WfStatement::IVisitor
		, protected virtual WfDeclaration::IVisitor
		, protected virtual WfVirtualCfeDeclaration::IVisitor
		, protected virtual WfVirtualCseDeclaration::IVisitor
		, protected virtual WfVirtualCseStatement::IVisitor
		, protected virtual WfCoroutineStatement::IVisitor
		, protected virtual WfStateMachineStatement::IVisitor
		, protected virtual WfVirtualCfeExpression::IVisitor
		, protected virtual WfVirtualCseExpression::IVisitor
		, protected virtual WfModuleUsingFragment::IVisitor
	{
	protected:
		void CopyFields(WfAttachEventExpression* from, WfAttachEventExpression* to);
		void CopyFields(WfAttribute* from, WfAttribute* to);
		void CopyFields(WfAutoPropertyDeclaration* from, WfAutoPropertyDeclaration* to);
		void CopyFields(WfBaseConstructorCall* from, WfBaseConstructorCall* to);
		void CopyFields(WfBinaryExpression* from, WfBinaryExpression* to);
		void CopyFields(WfBindExpression* from, WfBindExpression* to);
		void CopyFields(WfBlockStatement* from, WfBlockStatement* to);
		void CopyFields(WfBreakStatement* from, WfBreakStatement* to);
		void CopyFields(WfCallExpression* from, WfCallExpression* to);
		void CopyFields(WfCastResultInterfaceDeclaration* from, WfCastResultInterfaceDeclaration* to);
		void CopyFields(WfChildExpression* from, WfChildExpression* to);
		void CopyFields(WfChildType* from, WfChildType* to);
		void CopyFields(WfClassDeclaration* from, WfClassDeclaration* to);
		void CopyFields(WfCoOperatorExpression* from, WfCoOperatorExpression* to);
		void CopyFields(WfCoOperatorStatement* from, WfCoOperatorStatement* to);
		void CopyFields(WfCoPauseStatement* from, WfCoPauseStatement* to);
		void CopyFields(WfCoProviderStatement* from, WfCoProviderStatement* to);
		void CopyFields(WfConstructorArgument* from, WfConstructorArgument* to);
		void CopyFields(WfConstructorDeclaration* from, WfConstructorDeclaration* to);
		void CopyFields(WfConstructorExpression* from, WfConstructorExpression* to);
		void CopyFields(WfContinueStatement* from, WfContinueStatement* to);
		void CopyFields(WfCoroutineStatement* from, WfCoroutineStatement* to);
		void CopyFields(WfDeclaration* from, WfDeclaration* to);
		void CopyFields(WfDeleteStatement* from, WfDeleteStatement* to);
		void CopyFields(WfDestructorDeclaration* from, WfDestructorDeclaration* to);
		void CopyFields(WfDetachEventExpression* from, WfDetachEventExpression* to);
		void CopyFields(WfEnumDeclaration* from, WfEnumDeclaration* to);
		void CopyFields(WfEnumItem* from, WfEnumItem* to);
		void CopyFields(WfEnumItemIntersection* from, WfEnumItemIntersection* to);
		void CopyFields(WfEnumerableType* from, WfEnumerableType* to);
		void CopyFields(WfEventDeclaration* from, WfEventDeclaration* to);
		void CopyFields(WfExpectedTypeCastExpression* from, WfExpectedTypeCastExpression* to);
		void CopyFields(WfExpression* from, WfExpression* to);
		void CopyFields(WfExpressionStatement* from, WfExpressionStatement* to);
		void CopyFields(WfFloatingExpression* from, WfFloatingExpression* to);
		void CopyFields(WfForEachStatement* from, WfForEachStatement* to);
		void CopyFields(WfFormatExpression* from, WfFormatExpression* to);
		void CopyFields(WfFunctionArgument* from, WfFunctionArgument* to);
		void CopyFields(WfFunctionDeclaration* from, WfFunctionDeclaration* to);
		void CopyFields(WfFunctionExpression* from, WfFunctionExpression* to);
		void CopyFields(WfFunctionType* from, WfFunctionType* to);
		void CopyFields(WfGotoStatement* from, WfGotoStatement* to);
		void CopyFields(WfIfExpression* from, WfIfExpression* to);
		void CopyFields(WfIfStatement* from, WfIfStatement* to);
		void CopyFields(WfInferExpression* from, WfInferExpression* to);
		void CopyFields(WfIntegerExpression* from, WfIntegerExpression* to);
		void CopyFields(WfLetExpression* from, WfLetExpression* to);
		void CopyFields(WfLetVariable* from, WfLetVariable* to);
		void CopyFields(WfLiteralExpression* from, WfLiteralExpression* to);
		void CopyFields(WfMapType* from, WfMapType* to);
		void CopyFields(WfMemberExpression* from, WfMemberExpression* to);
		void CopyFields(WfMixinCastExpression* from, WfMixinCastExpression* to);
		void CopyFields(WfModule* from, WfModule* to);
		void CopyFields(WfModuleUsingFragment* from, WfModuleUsingFragment* to);
		void CopyFields(WfModuleUsingItem* from, WfModuleUsingItem* to);
		void CopyFields(WfModuleUsingNameFragment* from, WfModuleUsingNameFragment* to);
		void CopyFields(WfModuleUsingPath* from, WfModuleUsingPath* to);
		void CopyFields(WfModuleUsingWildCardFragment* from, WfModuleUsingWildCardFragment* to);
		void CopyFields(WfNamespaceDeclaration* from, WfNamespaceDeclaration* to);
		void CopyFields(WfNewClassExpression* from, WfNewClassExpression* to);
		void CopyFields(WfNewCoroutineExpression* from, WfNewCoroutineExpression* to);
		void CopyFields(WfNewInterfaceExpression* from, WfNewInterfaceExpression* to);
		void CopyFields(WfNullableType* from, WfNullableType* to);
		void CopyFields(WfObservableListType* from, WfObservableListType* to);
		void CopyFields(WfObserveExpression* from, WfObserveExpression* to);
		void CopyFields(WfOrderedLambdaExpression* from, WfOrderedLambdaExpression* to);
		void CopyFields(WfOrderedNameExpression* from, WfOrderedNameExpression* to);
		void CopyFields(WfPredefinedType* from, WfPredefinedType* to);
		void CopyFields(WfPropertyDeclaration* from, WfPropertyDeclaration* to);
		void CopyFields(WfRaiseExceptionStatement* from, WfRaiseExceptionStatement* to);
		void CopyFields(WfRangeExpression* from, WfRangeExpression* to);
		void CopyFields(WfRawPointerType* from, WfRawPointerType* to);
		void CopyFields(WfReferenceExpression* from, WfReferenceExpression* to);
		void CopyFields(WfReferenceType* from, WfReferenceType* to);
		void CopyFields(WfReturnStatement* from, WfReturnStatement* to);
		void CopyFields(WfSetTestingExpression* from, WfSetTestingExpression* to);
		void CopyFields(WfSharedPointerType* from, WfSharedPointerType* to);
		void CopyFields(WfStateDeclaration* from, WfStateDeclaration* to);
		void CopyFields(WfStateInput* from, WfStateInput* to);
		void CopyFields(WfStateInvokeStatement* from, WfStateInvokeStatement* to);
		void CopyFields(WfStateMachineDeclaration* from, WfStateMachineDeclaration* to);
		void CopyFields(WfStateMachineStatement* from, WfStateMachineStatement* to);
		void CopyFields(WfStateSwitchArgument* from, WfStateSwitchArgument* to);
		void CopyFields(WfStateSwitchCase* from, WfStateSwitchCase* to);
		void CopyFields(WfStateSwitchStatement* from, WfStateSwitchStatement* to);
		void CopyFields(WfStatement* from, WfStatement* to);
		void CopyFields(WfStringExpression* from, WfStringExpression* to);
		void CopyFields(WfStructDeclaration* from, WfStructDeclaration* to);
		void CopyFields(WfStructMember* from, WfStructMember* to);
		void CopyFields(WfSwitchCase* from, WfSwitchCase* to);
		void CopyFields(WfSwitchStatement* from, WfSwitchStatement* to);
		void CopyFields(WfThisExpression* from, WfThisExpression* to);
		void CopyFields(WfTopQualifiedExpression* from, WfTopQualifiedExpression* to);
		void CopyFields(WfTopQualifiedType* from, WfTopQualifiedType* to);
		void CopyFields(WfTryStatement* from, WfTryStatement* to);
		void CopyFields(WfType* from, WfType* to);
		void CopyFields(WfTypeCastingExpression* from, WfTypeCastingExpression* to);
		void CopyFields(WfTypeOfExpressionExpression* from, WfTypeOfExpressionExpression* to);
		void CopyFields(WfTypeOfTypeExpression* from, WfTypeOfTypeExpression* to);
		void CopyFields(WfTypeTestingExpression* from, WfTypeTestingExpression* to);
		void CopyFields(WfUnaryExpression* from, WfUnaryExpression* to);
		void CopyFields(WfVariableDeclaration* from, WfVariableDeclaration* to);
		void CopyFields(WfVariableStatement* from, WfVariableStatement* to);
		void CopyFields(WfVirtualCfeDeclaration* from, WfVirtualCfeDeclaration* to);
		void CopyFields(WfVirtualCfeExpression* from, WfVirtualCfeExpression* to);
		void CopyFields(WfVirtualCseDeclaration* from, WfVirtualCseDeclaration* to);
		void CopyFields(WfVirtualCseExpression* from, WfVirtualCseExpression* to);
		void CopyFields(WfVirtualCseStatement* from, WfVirtualCseStatement* to);
		void CopyFields(WfWhileStatement* from, WfWhileStatement* to);

	protected:
		virtual void Visit(WfAttribute* node);
		virtual void Visit(WfFunctionArgument* node);
		virtual void Visit(WfBaseConstructorCall* node);
		virtual void Visit(WfEnumItemIntersection* node);
		virtual void Visit(WfEnumItem* node);
		virtual void Visit(WfStructMember* node);
		virtual void Visit(WfStateInput* node);
		virtual void Visit(WfStateDeclaration* node);
		virtual void Visit(WfSwitchCase* node);
		virtual void Visit(WfStateSwitchArgument* node);
		virtual void Visit(WfStateSwitchCase* node);
		virtual void Visit(WfLetVariable* node);
		virtual void Visit(WfConstructorArgument* node);
		virtual void Visit(WfModuleUsingItem* node);
		virtual void Visit(WfModuleUsingPath* node);
		virtual void Visit(WfModule* node);

		void Visit(WfPredefinedType* node) override;
		void Visit(WfTopQualifiedType* node) override;
		void Visit(WfReferenceType* node) override;
		void Visit(WfRawPointerType* node) override;
		void Visit(WfSharedPointerType* node) override;
		void Visit(WfNullableType* node) override;
		void Visit(WfEnumerableType* node) override;
		void Visit(WfMapType* node) override;
		void Visit(WfObservableListType* node) override;
		void Visit(WfFunctionType* node) override;
		void Visit(WfChildType* node) override;

		void Visit(WfThisExpression* node) override;
		void Visit(WfTopQualifiedExpression* node) override;
		void Visit(WfReferenceExpression* node) override;
		void Visit(WfOrderedNameExpression* node) override;
		void Visit(WfOrderedLambdaExpression* node) override;
		void Visit(WfMemberExpression* node) override;
		void Visit(WfChildExpression* node) override;
		void Visit(WfLiteralExpression* node) override;
		void Visit(WfFloatingExpression* node) override;
		void Visit(WfIntegerExpression* node) override;
		void Visit(WfStringExpression* node) override;
		void Visit(WfUnaryExpression* node) override;
		void Visit(WfBinaryExpression* node) override;
		void Visit(WfLetExpression* node) override;
		void Visit(WfIfExpression* node) override;
		void Visit(WfRangeExpression* node) override;
		void Visit(WfSetTestingExpression* node) override;
		void Visit(WfConstructorExpression* node) override;
		void Visit(WfInferExpression* node) override;
		void Visit(WfTypeCastingExpression* node) override;
		void Visit(WfTypeTestingExpression* node) override;
		void Visit(WfTypeOfTypeExpression* node) override;
		void Visit(WfTypeOfExpressionExpression* node) override;
		void Visit(WfAttachEventExpression* node) override;
		void Visit(WfDetachEventExpression* node) override;
		void Visit(WfObserveExpression* node) override;
		void Visit(WfCallExpression* node) override;
		void Visit(WfFunctionExpression* node) override;
		void Visit(WfNewClassExpression* node) override;
		void Visit(WfNewInterfaceExpression* node) override;
		void Visit(WfVirtualCfeExpression* node) override;
		void Visit(WfVirtualCseExpression* node) override;

		void Visit(WfBreakStatement* node) override;
		void Visit(WfContinueStatement* node) override;
		void Visit(WfReturnStatement* node) override;
		void Visit(WfDeleteStatement* node) override;
		void Visit(WfRaiseExceptionStatement* node) override;
		void Visit(WfIfStatement* node) override;
		void Visit(WfWhileStatement* node) override;
		void Visit(WfTryStatement* node) override;
		void Visit(WfBlockStatement* node) override;
		void Visit(WfGotoStatement* node) override;
		void Visit(WfVariableStatement* node) override;
		void Visit(WfExpressionStatement* node) override;
		void Visit(WfVirtualCseStatement* node) override;
		void Visit(WfCoroutineStatement* node) override;
		void Visit(WfStateMachineStatement* node) override;

		void Visit(WfNamespaceDeclaration* node) override;
		void Visit(WfFunctionDeclaration* node) override;
		void Visit(WfVariableDeclaration* node) override;
		void Visit(WfEventDeclaration* node) override;
		void Visit(WfPropertyDeclaration* node) override;
		void Visit(WfConstructorDeclaration* node) override;
		void Visit(WfDestructorDeclaration* node) override;
		void Visit(WfClassDeclaration* node) override;
		void Visit(WfEnumDeclaration* node) override;
		void Visit(WfStructDeclaration* node) override;
		void Visit(WfVirtualCfeDeclaration* node) override;
		void Visit(WfVirtualCseDeclaration* node) override;

		void Visit(WfAutoPropertyDeclaration* node) override;
		void Visit(WfCastResultInterfaceDeclaration* node) override;

		void Visit(WfStateMachineDeclaration* node) override;

		void Visit(WfForEachStatement* node) override;
		void Visit(WfSwitchStatement* node) override;
		void Visit(WfCoProviderStatement* node) override;

		void Visit(WfCoPauseStatement* node) override;
		void Visit(WfCoOperatorStatement* node) override;

		void Visit(WfStateSwitchStatement* node) override;
		void Visit(WfStateInvokeStatement* node) override;

		void Visit(WfFormatExpression* node) override;

		void Visit(WfBindExpression* node) override;
		void Visit(WfNewCoroutineExpression* node) override;
		void Visit(WfMixinCastExpression* node) override;
		void Visit(WfExpectedTypeCastExpression* node) override;
		void Visit(WfCoOperatorExpression* node) override;

		void Visit(WfModuleUsingNameFragment* node) override;
		void Visit(WfModuleUsingWildCardFragment* node) override;

	public:
		virtual vl::Ptr<WfType> CopyNode(WfType* node);
		virtual vl::Ptr<WfExpression> CopyNode(WfExpression* node);
		virtual vl::Ptr<WfStatement> CopyNode(WfStatement* node);
		virtual vl::Ptr<WfDeclaration> CopyNode(WfDeclaration* node);
		virtual vl::Ptr<WfModuleUsingFragment> CopyNode(WfModuleUsingFragment* node);
		virtual vl::Ptr<WfAttribute> CopyNode(WfAttribute* node);
		virtual vl::Ptr<WfFunctionArgument> CopyNode(WfFunctionArgument* node);
		virtual vl::Ptr<WfBaseConstructorCall> CopyNode(WfBaseConstructorCall* node);
		virtual vl::Ptr<WfEnumItemIntersection> CopyNode(WfEnumItemIntersection* node);
		virtual vl::Ptr<WfEnumItem> CopyNode(WfEnumItem* node);
		virtual vl::Ptr<WfStructMember> CopyNode(WfStructMember* node);
		virtual vl::Ptr<WfStateInput> CopyNode(WfStateInput* node);
		virtual vl::Ptr<WfStateDeclaration> CopyNode(WfStateDeclaration* node);
		virtual vl::Ptr<WfSwitchCase> CopyNode(WfSwitchCase* node);
		virtual vl::Ptr<WfStateSwitchArgument> CopyNode(WfStateSwitchArgument* node);
		virtual vl::Ptr<WfStateSwitchCase> CopyNode(WfStateSwitchCase* node);
		virtual vl::Ptr<WfLetVariable> CopyNode(WfLetVariable* node);
		virtual vl::Ptr<WfConstructorArgument> CopyNode(WfConstructorArgument* node);
		virtual vl::Ptr<WfModuleUsingItem> CopyNode(WfModuleUsingItem* node);
		virtual vl::Ptr<WfModuleUsingPath> CopyNode(WfModuleUsingPath* node);
		virtual vl::Ptr<WfModule> CopyNode(WfModule* node);

		vl::Ptr<WfAttachEventExpression> CopyNode(WfAttachEventExpression* node);
		vl::Ptr<WfAutoPropertyDeclaration> CopyNode(WfAutoPropertyDeclaration* node);
		vl::Ptr<WfBinaryExpression> CopyNode(WfBinaryExpression* node);
		vl::Ptr<WfBindExpression> CopyNode(WfBindExpression* node);
		vl::Ptr<WfBlockStatement> CopyNode(WfBlockStatement* node);
		vl::Ptr<WfBreakStatement> CopyNode(WfBreakStatement* node);
		vl::Ptr<WfCallExpression> CopyNode(WfCallExpression* node);
		vl::Ptr<WfCastResultInterfaceDeclaration> CopyNode(WfCastResultInterfaceDeclaration* node);
		vl::Ptr<WfChildExpression> CopyNode(WfChildExpression* node);
		vl::Ptr<WfChildType> CopyNode(WfChildType* node);
		vl::Ptr<WfClassDeclaration> CopyNode(WfClassDeclaration* node);
		vl::Ptr<WfCoOperatorExpression> CopyNode(WfCoOperatorExpression* node);
		vl::Ptr<WfCoOperatorStatement> CopyNode(WfCoOperatorStatement* node);
		vl::Ptr<WfCoPauseStatement> CopyNode(WfCoPauseStatement* node);
		vl::Ptr<WfCoProviderStatement> CopyNode(WfCoProviderStatement* node);
		vl::Ptr<WfConstructorDeclaration> CopyNode(WfConstructorDeclaration* node);
		vl::Ptr<WfConstructorExpression> CopyNode(WfConstructorExpression* node);
		vl::Ptr<WfContinueStatement> CopyNode(WfContinueStatement* node);
		vl::Ptr<WfCoroutineStatement> CopyNode(WfCoroutineStatement* node);
		vl::Ptr<WfDeleteStatement> CopyNode(WfDeleteStatement* node);
		vl::Ptr<WfDestructorDeclaration> CopyNode(WfDestructorDeclaration* node);
		vl::Ptr<WfDetachEventExpression> CopyNode(WfDetachEventExpression* node);
		vl::Ptr<WfEnumDeclaration> CopyNode(WfEnumDeclaration* node);
		vl::Ptr<WfEnumerableType> CopyNode(WfEnumerableType* node);
		vl::Ptr<WfEventDeclaration> CopyNode(WfEventDeclaration* node);
		vl::Ptr<WfExpectedTypeCastExpression> CopyNode(WfExpectedTypeCastExpression* node);
		vl::Ptr<WfExpressionStatement> CopyNode(WfExpressionStatement* node);
		vl::Ptr<WfFloatingExpression> CopyNode(WfFloatingExpression* node);
		vl::Ptr<WfForEachStatement> CopyNode(WfForEachStatement* node);
		vl::Ptr<WfFormatExpression> CopyNode(WfFormatExpression* node);
		vl::Ptr<WfFunctionDeclaration> CopyNode(WfFunctionDeclaration* node);
		vl::Ptr<WfFunctionExpression> CopyNode(WfFunctionExpression* node);
		vl::Ptr<WfFunctionType> CopyNode(WfFunctionType* node);
		vl::Ptr<WfGotoStatement> CopyNode(WfGotoStatement* node);
		vl::Ptr<WfIfExpression> CopyNode(WfIfExpression* node);
		vl::Ptr<WfIfStatement> CopyNode(WfIfStatement* node);
		vl::Ptr<WfInferExpression> CopyNode(WfInferExpression* node);
		vl::Ptr<WfIntegerExpression> CopyNode(WfIntegerExpression* node);
		vl::Ptr<WfLetExpression> CopyNode(WfLetExpression* node);
		vl::Ptr<WfLiteralExpression> CopyNode(WfLiteralExpression* node);
		vl::Ptr<WfMapType> CopyNode(WfMapType* node);
		vl::Ptr<WfMemberExpression> CopyNode(WfMemberExpression* node);
		vl::Ptr<WfMixinCastExpression> CopyNode(WfMixinCastExpression* node);
		vl::Ptr<WfModuleUsingNameFragment> CopyNode(WfModuleUsingNameFragment* node);
		vl::Ptr<WfModuleUsingWildCardFragment> CopyNode(WfModuleUsingWildCardFragment* node);
		vl::Ptr<WfNamespaceDeclaration> CopyNode(WfNamespaceDeclaration* node);
		vl::Ptr<WfNewClassExpression> CopyNode(WfNewClassExpression* node);
		vl::Ptr<WfNewCoroutineExpression> CopyNode(WfNewCoroutineExpression* node);
		vl::Ptr<WfNewInterfaceExpression> CopyNode(WfNewInterfaceExpression* node);
		vl::Ptr<WfNullableType> CopyNode(WfNullableType* node);
		vl::Ptr<WfObservableListType> CopyNode(WfObservableListType* node);
		vl::Ptr<WfObserveExpression> CopyNode(WfObserveExpression* node);
		vl::Ptr<WfOrderedLambdaExpression> CopyNode(WfOrderedLambdaExpression* node);
		vl::Ptr<WfOrderedNameExpression> CopyNode(WfOrderedNameExpression* node);
		vl::Ptr<WfPredefinedType> CopyNode(WfPredefinedType* node);
		vl::Ptr<WfPropertyDeclaration> CopyNode(WfPropertyDeclaration* node);
		vl::Ptr<WfRaiseExceptionStatement> CopyNode(WfRaiseExceptionStatement* node);
		vl::Ptr<WfRangeExpression> CopyNode(WfRangeExpression* node);
		vl::Ptr<WfRawPointerType> CopyNode(WfRawPointerType* node);
		vl::Ptr<WfReferenceExpression> CopyNode(WfReferenceExpression* node);
		vl::Ptr<WfReferenceType> CopyNode(WfReferenceType* node);
		vl::Ptr<WfReturnStatement> CopyNode(WfReturnStatement* node);
		vl::Ptr<WfSetTestingExpression> CopyNode(WfSetTestingExpression* node);
		vl::Ptr<WfSharedPointerType> CopyNode(WfSharedPointerType* node);
		vl::Ptr<WfStateInvokeStatement> CopyNode(WfStateInvokeStatement* node);
		vl::Ptr<WfStateMachineDeclaration> CopyNode(WfStateMachineDeclaration* node);
		vl::Ptr<WfStateMachineStatement> CopyNode(WfStateMachineStatement* node);
		vl::Ptr<WfStateSwitchStatement> CopyNode(WfStateSwitchStatement* node);
		vl::Ptr<WfStringExpression> CopyNode(WfStringExpression* node);
		vl::Ptr<WfStructDeclaration> CopyNode(WfStructDeclaration* node);
		vl::Ptr<WfSwitchStatement> CopyNode(WfSwitchStatement* node);
		vl::Ptr<WfThisExpression> CopyNode(WfThisExpression* node);
		vl::Ptr<WfTopQualifiedExpression> CopyNode(WfTopQualifiedExpression* node);
		vl::Ptr<WfTopQualifiedType> CopyNode(WfTopQualifiedType* node);
		vl::Ptr<WfTryStatement> CopyNode(WfTryStatement* node);
		vl::Ptr<WfTypeCastingExpression> CopyNode(WfTypeCastingExpression* node);
		vl::Ptr<WfTypeOfExpressionExpression> CopyNode(WfTypeOfExpressionExpression* node);
		vl::Ptr<WfTypeOfTypeExpression> CopyNode(WfTypeOfTypeExpression* node);
		vl::Ptr<WfTypeTestingExpression> CopyNode(WfTypeTestingExpression* node);
		vl::Ptr<WfUnaryExpression> CopyNode(WfUnaryExpression* node);
		vl::Ptr<WfVariableDeclaration> CopyNode(WfVariableDeclaration* node);
		vl::Ptr<WfVariableStatement> CopyNode(WfVariableStatement* node);
		vl::Ptr<WfVirtualCfeDeclaration> CopyNode(WfVirtualCfeDeclaration* node);
		vl::Ptr<WfVirtualCfeExpression> CopyNode(WfVirtualCfeExpression* node);
		vl::Ptr<WfVirtualCseDeclaration> CopyNode(WfVirtualCseDeclaration* node);
		vl::Ptr<WfVirtualCseExpression> CopyNode(WfVirtualCseExpression* node);
		vl::Ptr<WfVirtualCseStatement> CopyNode(WfVirtualCseStatement* node);
		vl::Ptr<WfWhileStatement> CopyNode(WfWhileStatement* node);
	};
}
#endif