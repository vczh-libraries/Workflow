/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/NewCustomInterface.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#ifndef VCZH_WORKFLOW_COMPILER_GENERATED_NEWCUSTOMINTERFACE
#define VCZH_WORKFLOW_COMPILER_GENERATED_NEWCUSTOMINTERFACE

#include "../Source/CppTypes.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

namespace vl_workflow_global
{
	class __vwsnc1_NewCustomInterface_main__IMyInterface;
	class __vwsnc2_NewCustomInterface_main_CreateEnumerator__vl_reflection_description_IValueEnumerator;
}

class IMyInterface;

class IMyInterface : public virtual ::vl::reflection::description::IValueEnumerable, public ::vl::reflection::Description<IMyInterface>
{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
	friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<IMyInterface>;
#endif
public:
	static ::vl::vint64_t Get50();
	virtual ::vl::vint64_t Get100() = 0;
};

/***********************************************************************
Global Variables and Functions
***********************************************************************/

namespace vl_workflow_global
{
	class NewCustomInterface
	{
	public:

		::vl::WString main();

		static NewCustomInterface& Instance();
	};

/***********************************************************************
Closures
***********************************************************************/

	class __vwsnc1_NewCustomInterface_main__IMyInterface : public ::vl::Object, public virtual ::IMyInterface
	{
	public:
		::vl::vint64_t begin;
		::vl::vint64_t end;

		__vwsnc1_NewCustomInterface_main__IMyInterface(::vl::vint64_t __vwsnctor_begin, ::vl::vint64_t __vwsnctor_end);

		::vl::Ptr<::vl::reflection::description::IValueEnumerator> CreateEnumerator() override;
		::vl::vint64_t Get100() override;
	};

	class __vwsnc2_NewCustomInterface_main_CreateEnumerator__vl_reflection_description_IValueEnumerator : public ::vl::Object, public virtual ::vl::reflection::description::IValueEnumerator
	{
	public:
		::vl::vint64_t begin;
		::vl::vint64_t end;
		::IMyInterface* __vwsnthis_0;

		__vwsnc2_NewCustomInterface_main_CreateEnumerator__vl_reflection_description_IValueEnumerator(::vl::vint64_t __vwsnctor_begin, ::vl::vint64_t __vwsnctor_end, ::IMyInterface* __vwsnctorthis_0);

		::vl::vint64_t index = 0;
		::vl::reflection::description::Value GetCurrent() override;
		::vl::vint64_t GetIndex() override;
		bool Next() override;
	};
}

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

#endif
