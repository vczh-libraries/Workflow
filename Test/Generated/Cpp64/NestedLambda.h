/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/NestedLambda.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#ifndef VCZH_WORKFLOW_COMPILER_GENERATED_NESTEDLAMBDA
#define VCZH_WORKFLOW_COMPILER_GENERATED_NESTEDLAMBDA

#include "../Source/CppTypes.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

namespace vl_workflow_global
{
	struct __vwsnf3_NestedLambda_main_H_Calculate_;
	struct __vwsnf4_NestedLambda_main_H_Calculate_;
	struct __vwsnf7_NestedLambda_main_Calculate_;
	struct __vwsnf8_NestedLambda_main_Calculate_;
	struct __vwsno1_NestedLambda_main_H_;
	struct __vwsno2_NestedLambda_main_H_Calculate_;
	struct __vwsno5_NestedLambda_main_H_Calculate__;
	struct __vwsno6_NestedLambda_main_Calculate_;
	struct __vwsno9_NestedLambda_main_Calculate__;
	class __vwsnc1_NestedLambda_main__IA;
	class __vwsnc2_NestedLambda_main_H__IB;
}

class IA;
class IB;

class IA : public virtual ::vl::reflection::IDescriptable, public ::vl::reflection::Description<IA>
{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
	friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<IA>;
#endif
public:
	virtual ::vl::vint64_t GetA() = 0;
	virtual void SetA(::vl::vint64_t value) = 0;
	::vl::Event<void()> AChanged;
	virtual ::vl::WString Calculate() = 0;
};

class IB : public virtual ::vl::reflection::IDescriptable, public ::vl::reflection::Description<IB>
{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
	friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<IB>;
#endif
public:
	virtual ::vl::vint64_t GetB() = 0;
	virtual void SetB(::vl::vint64_t value) = 0;
	::vl::Event<void()> BChanged;
	virtual ::vl::WString Calculate() = 0;
};

/***********************************************************************
Global Variables and Functions
***********************************************************************/

namespace vl_workflow_global
{
	class NestedLambda
	{
	public:

		::vl::WString main();

		static NestedLambda& Instance();
	};

/***********************************************************************
Closures
***********************************************************************/

	struct __vwsnf3_NestedLambda_main_H_Calculate_
	{
		::IB* __vwsnthis_0;
		::IA* __vwsnthis_1;

		__vwsnf3_NestedLambda_main_H_Calculate_(::IB* __vwsnctorthis_0, ::IA* __vwsnctorthis_1);

		::vl::vint64_t operator()() const;
	};

	struct __vwsnf4_NestedLambda_main_H_Calculate_
	{
		::IB* __vwsnthis_0;
		::IA* __vwsnthis_1;

		__vwsnf4_NestedLambda_main_H_Calculate_(::IB* __vwsnctorthis_0, ::IA* __vwsnctorthis_1);

		::vl::vint64_t operator()() const;
	};

	struct __vwsnf7_NestedLambda_main_Calculate_
	{
		::IA* __vwsnthis_0;

		__vwsnf7_NestedLambda_main_Calculate_(::IA* __vwsnctorthis_0);

		::vl::vint64_t operator()() const;
	};

	struct __vwsnf8_NestedLambda_main_Calculate_
	{
		::IA* __vwsnthis_0;

		__vwsnf8_NestedLambda_main_Calculate_(::IA* __vwsnctorthis_0);

		::vl::vint64_t operator()() const;
	};

	struct __vwsno1_NestedLambda_main_H_
	{
		::IA* __vwsnthis_0;

		__vwsno1_NestedLambda_main_H_(::IA* __vwsnctorthis_0);

		::vl::WString operator()() const;
	};

	struct __vwsno2_NestedLambda_main_H_Calculate_
	{
		::IB* __vwsnthis_0;
		::IA* __vwsnthis_1;

		__vwsno2_NestedLambda_main_H_Calculate_(::IB* __vwsnctorthis_0, ::IA* __vwsnctorthis_1);

		::vl::vint64_t operator()() const;
	};

	struct __vwsno5_NestedLambda_main_H_Calculate__
	{
		::IB* __vwsnthis_0;
		::IA* __vwsnthis_1;

		__vwsno5_NestedLambda_main_H_Calculate__(::IB* __vwsnctorthis_0, ::IA* __vwsnctorthis_1);

		::vl::vint64_t operator()() const;
	};

	struct __vwsno6_NestedLambda_main_Calculate_
	{
		::IA* __vwsnthis_0;

		__vwsno6_NestedLambda_main_Calculate_(::IA* __vwsnctorthis_0);

		::vl::vint64_t operator()() const;
	};

	struct __vwsno9_NestedLambda_main_Calculate__
	{
		::IA* __vwsnthis_0;

		__vwsno9_NestedLambda_main_Calculate__(::IA* __vwsnctorthis_0);

		::vl::vint64_t operator()() const;
	};

	class __vwsnc1_NestedLambda_main__IA : public ::vl::Object, public virtual ::IA
	{
	public:
		__vwsnc1_NestedLambda_main__IA();

		::vl::vint64_t a = 0;
		::vl::vint64_t GetA() override;
		void SetA(::vl::vint64_t value) override;
		::vl::WString H();
		::vl::WString Calculate() override;
	};

	class __vwsnc2_NestedLambda_main_H__IB : public ::vl::Object, public virtual ::IB
	{
	public:
		::IA* __vwsnthis_0;

		__vwsnc2_NestedLambda_main_H__IB(::IA* __vwsnctorthis_0);

		::vl::vint64_t b = 0;
		::vl::vint64_t GetB() override;
		void SetB(::vl::vint64_t value) override;
		::vl::WString H();
		::vl::WString Calculate() override;
	};
}

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

#endif
