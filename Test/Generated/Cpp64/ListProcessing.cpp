/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/ListProcessing.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "ListProcessing.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::ListProcessing::
#define GLOBAL_NAME ::vl_workflow_global::ListProcessing::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::ListProcessing::Instance()

/***********************************************************************
Global Variables
***********************************************************************/

BEGIN_GLOBAL_STORAGE_CLASS(vl_workflow_global_ListProcessing)
	vl_workflow_global::ListProcessing instance;
	INITIALIZE_GLOBAL_STORAGE_CLASS
	FINALIZE_GLOBAL_STORAGE_CLASS
END_GLOBAL_STORAGE_CLASS(vl_workflow_global_ListProcessing)

namespace vl_workflow_global
{
/***********************************************************************
Global Functions
***********************************************************************/

	::vl::WString ListProcessing::main()
	{
		auto xs = (::vl::__vwsn::CreateList().Add(static_cast<::vl::vint64_t>(1L)).Add(static_cast<::vl::vint64_t>(2L)).Add(static_cast<::vl::vint64_t>(3L)).Add(static_cast<::vl::vint64_t>(4L)).Add(static_cast<::vl::vint64_t>(5L))).list;
		auto s1 = ((((::vl::__vwsn::ToString(::vl::__vwsn::This(xs.Obj())->GetCount()) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint64_t>(::vl::__vwsn::This(xs.Obj())->Get(static_cast<::vl::vint64_t>(0L))))) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint64_t>(::vl::__vwsn::This(xs.Obj())->Get(static_cast<::vl::vint64_t>(4L)))));
		::vl::__vwsn::This(xs.Obj())->Set(static_cast<::vl::vint64_t>(4L), ::vl::__vwsn::Box(static_cast<::vl::vint64_t>(6L)));
		::vl::__vwsn::This(xs.Obj())->Add(::vl::__vwsn::Box(static_cast<::vl::vint64_t>(7L)));
		auto s2 = ((((::vl::__vwsn::ToString(::vl::__vwsn::This(xs.Obj())->GetCount()) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint64_t>(::vl::__vwsn::This(xs.Obj())->Get(static_cast<::vl::vint64_t>(0L))))) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint64_t>(::vl::__vwsn::This(xs.Obj())->Get(static_cast<::vl::vint64_t>(4L)))));
		return ((s1 + ::vl::WString::Unmanaged(L", ")) + s2);
	}

	ListProcessing& ListProcessing::Instance()
	{
		return Getvl_workflow_global_ListProcessing().instance;
	}
}

#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif
