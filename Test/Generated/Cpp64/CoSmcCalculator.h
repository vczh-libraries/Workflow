/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/CoSmcCalculator.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#ifndef VCZH_WORKFLOW_COMPILER_GENERATED_COSMCCALCULATOR
#define VCZH_WORKFLOW_COMPILER_GENERATED_COSMCCALCULATOR

#include "../Source/CppTypes.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

namespace vl_workflow_global
{
	struct __vwsnf1_CoSmcCalculator_main_;
	class __vwsnc1_CoSmcCalculator_SMCalculator___vwsn_state_CreateCoroutine__vl_reflection_description_ICoroutine;
}

class SMCalculator;

class SMCalculator : public ::vl::reflection::description::StateMachine, public ::vl::reflection::Description<SMCalculator>
{
	friend class ::vl_workflow_global::__vwsnc1_CoSmcCalculator_SMCalculator___vwsn_state_CreateCoroutine__vl_reflection_description_ICoroutine;
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
	friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<SMCalculator>;
#endif
public:
	::vl::WString valueFirst;
	::vl::WString op;
	::vl::WString __vwsn_prop_Value;
	::vl::WString GetValue();
	void SetValue(const ::vl::WString& __vwsn_value_);
	::vl::Event<void()> ValueChanged;
	void Update(const ::vl::WString& value);
	void Calculate();
	::vl::vint64_t __vwsn_stateip_Digit_i;
	bool __vwsn_statesp_Integer_newNumber;
	void Digit(::vl::vint64_t i);
	void Dot();
	void Add();
	void Mul();
	void Equal();
	void Clear();
	void __vwsn_state_CreateCoroutine(::vl::vint64_t __vwsn_state_startState);
	SMCalculator();
};

/***********************************************************************
Global Variables and Functions
***********************************************************************/

namespace vl_workflow_global
{
	class CoSmcCalculator
	{
	public:

		::vl::WString s;

		::vl::WString main();

		static CoSmcCalculator& Instance();
	};

/***********************************************************************
Closures
***********************************************************************/

	struct __vwsnf1_CoSmcCalculator_main_
	{
		::vl::Ptr<::SMCalculator> c;

		__vwsnf1_CoSmcCalculator_main_(::vl::Ptr<::SMCalculator> __vwsnctor_c);

		void operator()() const;
	};

	class __vwsnc1_CoSmcCalculator_SMCalculator___vwsn_state_CreateCoroutine__vl_reflection_description_ICoroutine : public ::vl::Object, public virtual ::vl::reflection::description::ICoroutine
	{
	public:
		::vl::Ptr<::vl::reflection::description::ICoroutine> __vwsn_state_previousCoroutine;
		::vl::vint64_t __vwsn_state_startState;
		::SMCalculator* __vwsn_state_stateMachineObject;
		::SMCalculator* __vwsnthis_0;

		__vwsnc1_CoSmcCalculator_SMCalculator___vwsn_state_CreateCoroutine__vl_reflection_description_ICoroutine(::vl::Ptr<::vl::reflection::description::ICoroutine> __vwsnctor___vwsn_state_previousCoroutine, ::vl::vint64_t __vwsnctor___vwsn_state_startState, ::SMCalculator* __vwsnctor___vwsn_state_stateMachineObject, ::SMCalculator* __vwsnctorthis_0);

		::vl::Ptr<::vl::reflection::description::IValueException> __vwsn_co_tempexvar0_ex;
		::vl::vint64_t __vwsn_co0_i = 0;
		::vl::vint64_t __vwsn_co1_switch_0 = 0;
		::vl::vint64_t __vwsn_co2_i = 0;
		::vl::vint64_t __vwsn_co3_switch_1 = 0;
		bool __vwsn_co4_newNumber = false;
		::vl::vint64_t __vwsn_co5_switch_2 = 0;
		::vl::vint64_t __vwsn_co6_switch_4 = 0;
		::vl::vint64_t __vwsn_co7_state_currentState = 0;
		::vl::vint64_t __vwsn_co8_state_state = 0;
		::vl::vint64_t __vwsn_co_state_ = 0;
		::vl::vint64_t __vwsn_co_state_before_pause_ = 0;
		::vl::Ptr<::vl::reflection::description::IValueException> __vwsn_prop_Failure;
		::vl::Ptr<::vl::reflection::description::IValueException> GetFailure() override;
		void SetFailure(::vl::Ptr<::vl::reflection::description::IValueException> __vwsn_value_);
		::vl::reflection::description::CoroutineStatus __vwsn_prop_Status = static_cast<::vl::reflection::description::CoroutineStatus>(0);
		::vl::reflection::description::CoroutineStatus GetStatus() override;
		void SetStatus(::vl::reflection::description::CoroutineStatus __vwsn_value_);
		void Resume(bool __vwsn_raise_exception_, ::vl::Ptr<::vl::reflection::description::CoroutineResult> __vwsn_coroutine_output_) override;
	};
}

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

#endif
