/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/WorkflowAttributes.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#ifndef VCZH_WORKFLOW_COMPILER_GENERATED_WORKFLOWATTRIBUTES_DP1
#define VCZH_WORKFLOW_COMPILER_GENERATED_WORKFLOWATTRIBUTES_DP1

#include "WorkflowAttributes.h"
#include "WorkflowAttributes_Expression.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

namespace calculator
{
	class BinaryExpression : public ::calculator::Expression, public ::vl::reflection::Description<BinaryExpression>
	{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
		friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<BinaryExpression>;
#endif
	public:
		using BinaryOperator = ::__vwsn_enums::_calculator_BinaryExpression_BinaryOperator;

		::calculator::BinaryExpression::BinaryOperator __vwsn_prop_Operator;
		::calculator::BinaryExpression::BinaryOperator GetOperator();
		void SetOperator(::calculator::BinaryExpression::BinaryOperator __vwsn_value_);
		::vl::Ptr<::calculator::Expression> __vwsn_prop_Left;
		::vl::Ptr<::calculator::Expression> GetLeft();
		void SetLeft(::vl::Ptr<::calculator::Expression> __vwsn_value_);
		::vl::Ptr<::calculator::Expression> __vwsn_prop_Right;
		::vl::Ptr<::calculator::Expression> GetRight();
		void SetRight(::vl::Ptr<::calculator::Expression> __vwsn_value_);
		BinaryExpression(::vl::Ptr<::calculator::Expression> _left, ::calculator::BinaryExpression::BinaryOperator _op, ::vl::Ptr<::calculator::Expression> _right);
	};

	class NumberExpression : public ::calculator::Expression, public ::vl::reflection::Description<NumberExpression>
	{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
		friend struct ::vl::reflection::description::CustomTypeDescriptorSelector<NumberExpression>;
#endif
	public:
		::vl::vint64_t __vwsn_prop_Value;
		::vl::vint64_t GetValue();
		void SetValue(::vl::vint64_t __vwsn_value_);
		NumberExpression(::vl::vint64_t _value);
	};

}

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

#endif
