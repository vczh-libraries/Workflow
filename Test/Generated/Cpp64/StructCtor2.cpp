/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/StructCtor2.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "StructCtor2.h"
/* CodePack:BeginIgnore() */
#ifndef VCZH_DEBUG_NO_REFLECTION
/* CodePack:ConditionOff(VCZH_DEBUG_NO_REFLECTION, StructCtor2Reflection.h) */
#include "StructCtor2Reflection.h"
#endif
/* CodePack:EndIgnore() */

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::StructCtor2::
#define GLOBAL_NAME ::vl_workflow_global::StructCtor2::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::StructCtor2::Instance()

/***********************************************************************
Global Variables
***********************************************************************/

BEGIN_GLOBAL_STORAGE_CLASS(vl_workflow_global_StructCtor2)
	vl_workflow_global::StructCtor2 instance;
	INITIALIZE_GLOBAL_STORAGE_CLASS
	FINALIZE_GLOBAL_STORAGE_CLASS
END_GLOBAL_STORAGE_CLASS(vl_workflow_global_StructCtor2)

namespace vl_workflow_global
{
/***********************************************************************
Global Functions
***********************************************************************/

	::vl::vint64_t StructCtor2::Do(::Point p)
	{
		return (p.x + p.y);
	}

	::vl::WString StructCtor2::main()
	{
		auto a = [&](){ ::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint64_t>(1L); __vwsn_temp__.y = static_cast<::vl::vint64_t>(2L); return __vwsn_temp__; }();
		auto b = [&](){ ::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint64_t>(3L); __vwsn_temp__.y = static_cast<::vl::vint64_t>(4L); return __vwsn_temp__; }();
		return ::vl::__vwsn::ToString(((GLOBAL_NAME Do(a) + GLOBAL_NAME Do(b)) + GLOBAL_NAME Do([&](){ ::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint64_t>(5L); __vwsn_temp__.y = static_cast<::vl::vint64_t>(6L); return __vwsn_temp__; }())));
	}

	StructCtor2& StructCtor2::Instance()
	{
		return Getvl_workflow_global_StructCtor2().instance;
	}
}

#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif
