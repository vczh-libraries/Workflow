/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/OpCompareIndexOf.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "OpCompareIndexOf.h"
/* CodePack:BeginIgnore() */
#ifndef VCZH_DEBUG_NO_REFLECTION
/* CodePack:ConditionOff(VCZH_DEBUG_NO_REFLECTION, OpCompareIndexOfReflection.h) */
#include "OpCompareIndexOfReflection.h"
#endif
/* CodePack:EndIgnore() */

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::OpCompareIndexOf::
#define GLOBAL_NAME ::vl_workflow_global::OpCompareIndexOf::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::OpCompareIndexOf::Instance()

/***********************************************************************
Global Variables
***********************************************************************/

BEGIN_GLOBAL_STORAGE_CLASS(vl_workflow_global_OpCompareIndexOf)
	vl_workflow_global::OpCompareIndexOf instance;
	INITIALIZE_GLOBAL_STORAGE_CLASS
	FINALIZE_GLOBAL_STORAGE_CLASS
END_GLOBAL_STORAGE_CLASS(vl_workflow_global_OpCompareIndexOf)

namespace vl_workflow_global
{
/***********************************************************************
Global Functions
***********************************************************************/

	::vl::WString OpCompareIndexOf::main()
	{
		auto l1 = (::vl::__vwsn::CreateList().Add(::test::Point{}).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())).list;
		auto l2 = (::vl::__vwsn::CreateList().Add(::IndexPoint{}).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())).list;
		auto m1 = (::vl::__vwsn::CreateDictionary().Add(::test::Point{}, static_cast<::vl::vint32_t>(0)).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(1)).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(2)).Add([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(3))).dictionary;
		auto m2 = (::vl::__vwsn::CreateDictionary().Add(::IndexPoint{}, static_cast<::vl::vint32_t>(0)).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(1)).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(2)).Add([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }(), static_cast<::vl::vint32_t>(3))).dictionary;
		auto result = ((::vl::__vwsn::ToString(::vl::__vwsn::This(l1.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(2); __vwsn_temp__.y = static_cast<::vl::vint32_t>(2); return __vwsn_temp__; }()))) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l2.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(2); __vwsn_temp__.y = static_cast<::vl::vint32_t>(2); return __vwsn_temp__; }()))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l1.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l1.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l1.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l1.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m1.Obj())->Get(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m1.Obj())->Get(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m1.Obj())->Get(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m1.Obj())->Get(::vl::__vwsn::Box([&](){ ::test::Point __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l2.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l2.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l2.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::This(l2.Obj())->IndexOf(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }())))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m2.Obj())->Get(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m2.Obj())->Get(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(0); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m2.Obj())->Get(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(0); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()))))));
		(result = ((result + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(m2.Obj())->Get(::vl::__vwsn::Box([&](){ ::IndexPoint __vwsn_temp__; __vwsn_temp__.x = static_cast<::vl::vint32_t>(1); __vwsn_temp__.y = static_cast<::vl::vint32_t>(1); return __vwsn_temp__; }()))))));
		return result;
	}

	OpCompareIndexOf& OpCompareIndexOf::Instance()
	{
		return Getvl_workflow_global_OpCompareIndexOf().instance;
	}
}

#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif
