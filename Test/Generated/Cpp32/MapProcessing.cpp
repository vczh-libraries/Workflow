/***********************************************************************
!!!!!! DO NOT MODIFY !!!!!!

Source: ../Resources/Codegen/MapProcessing.txt

This file is generated by Workflow compiler
https://github.com/vczh-libraries
***********************************************************************/

#include "MapProcessing.h"

#if defined( _MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#elif defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wparentheses-equality"
#elif defined(__GNUC__)
#pragma GCC diagnostic push
#endif

#define GLOBAL_SYMBOL ::vl_workflow_global::MapProcessing::
#define GLOBAL_NAME ::vl_workflow_global::MapProcessing::Instance().
#define GLOBAL_OBJ &::vl_workflow_global::MapProcessing::Instance()

/***********************************************************************
Global Variables
***********************************************************************/

BEGIN_GLOBAL_STORAGE_CLASS(vl_workflow_global_MapProcessing)
	vl_workflow_global::MapProcessing instance;
	INITIALIZE_GLOBAL_STORAGE_CLASS
	FINALIZE_GLOBAL_STORAGE_CLASS
END_GLOBAL_STORAGE_CLASS(vl_workflow_global_MapProcessing)

namespace vl_workflow_global
{
/***********************************************************************
Global Functions
***********************************************************************/

	::vl::WString MapProcessing::main()
	{
		auto xs = (::vl::__vwsn::CreateDictionary().Add(::vl::WString::Unmanaged(L"a"), static_cast<::vl::vint32_t>(1)).Add(::vl::WString::Unmanaged(L"b"), static_cast<::vl::vint32_t>(2)).Add(::vl::WString::Unmanaged(L"c"), static_cast<::vl::vint32_t>(3)).Add(::vl::WString::Unmanaged(L"d"), static_cast<::vl::vint32_t>(4)).Add(::vl::WString::Unmanaged(L"e"), static_cast<::vl::vint32_t>(5))).dictionary;
		auto s1 = ((((::vl::__vwsn::ToString(::vl::__vwsn::This(xs.Obj())->GetCount()) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(xs.Obj())->Get(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"a")))))) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(xs.Obj())->Get(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"e"))))));
		::vl::__vwsn::This(xs.Obj())->Set(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"e")), ::vl::__vwsn::Box(static_cast<::vl::vint32_t>(6)));
		::vl::__vwsn::This(xs.Obj())->Set(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"f")), ::vl::__vwsn::Box(static_cast<::vl::vint32_t>(7)));
		auto s2 = ((((::vl::__vwsn::ToString(::vl::__vwsn::This(xs.Obj())->GetCount()) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(xs.Obj())->Get(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"a")))))) + ::vl::WString::Unmanaged(L", ")) + ::vl::__vwsn::ToString(::vl::__vwsn::Unbox<::vl::vint32_t>(::vl::__vwsn::This(xs.Obj())->Get(::vl::__vwsn::Box(::vl::WString::Unmanaged(L"e"))))));
		return ((s1 + ::vl::WString::Unmanaged(L", ")) + s2);
	}

	MapProcessing& MapProcessing::Instance()
	{
		return Getvl_workflow_global_MapProcessing().instance;
	}
}

#undef GLOBAL_SYMBOL
#undef GLOBAL_NAME
#undef GLOBAL_OBJ

#if defined( _MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif
