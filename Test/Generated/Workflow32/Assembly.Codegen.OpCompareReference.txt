========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
main (2 .. 91)
    Arguments:
    Captured Variables:
    Local Variables:
        a
        b
        c

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  1
2    :     LoadValue     : value = <I4, 1>
//  new (ObservableValue^)(1)
3    :     LoadValue     : value = <null>
//  new (ObservableValue^)(1)
4    :     InvokeMethod  : methodInfo = <test::ObservableValue>, stackPatternCount = 1
//  var a = new (ObservableValue^)(1);
5    :     StoreLocalVar : var = 0(a)
//  2
6    :     LoadValue     : value = <I4, 2>
//  new (ObservableValue^)(2)
7    :     LoadValue     : value = <null>
//  new (ObservableValue^)(2)
8    :     InvokeMethod  : methodInfo = <test::ObservableValue>, stackPatternCount = 1
//  var b = new (ObservableValue^)(2);
9    :     StoreLocalVar : var = 1(b)
//  null
10   :     LoadValue     : value = <null>
//  var c : ObservableValue^ = null;
11   :     StoreLocalVar : var = 2(c)
//  a
12   :     LoadLocalVar  : var = 0(a)
//  a is null
13   :     LoadValue     : value = <null>
//  a is null
14   :     CompareReference
//  a is null
15   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
16   :     LoadValue     : value = <String, , >
//  (a is null & ", ")
17   :     OpConcat      
//  a
18   :     LoadLocalVar  : var = 0(a)
//  a is not null
19   :     LoadValue     : value = <null>
//  a is not null
20   :     CompareReference
//  a is not null
21   :     OpNot         : type = Bool
//  a is not null
22   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((a is null & ", ") & a is not null)
23   :     OpConcat      
//  ", "
24   :     LoadValue     : value = <String, , >
//  (((a is null & ", ") & a is not null) & ", ")
25   :     OpConcat      
//  a
26   :     LoadLocalVar  : var = 0(a)
//  b
27   :     LoadLocalVar  : var = 1(b)
//  (a == b)
28   :     CompareReference
//  (a == b)
29   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((a is null & ", ") & a is not null) & ", ") & (a == b))
30   :     OpConcat      
//  ", "
31   :     LoadValue     : value = <String, , >
//  (((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ")
32   :     OpConcat      
//  b
33   :     LoadLocalVar  : var = 1(b)
//  b is null
34   :     LoadValue     : value = <null>
//  b is null
35   :     CompareReference
//  b is null
36   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null)
37   :     OpConcat      
//  ", "
38   :     LoadValue     : value = <String, , >
//  (((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ")
39   :     OpConcat      
//  b
40   :     LoadLocalVar  : var = 1(b)
//  b is not null
41   :     LoadValue     : value = <null>
//  b is not null
42   :     CompareReference
//  b is not null
43   :     OpNot         : type = Bool
//  b is not null
44   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null)
45   :     OpConcat      
//  ", "
46   :     LoadValue     : value = <String, , >
//  (((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ")
47   :     OpConcat      
//  a
48   :     LoadLocalVar  : var = 0(a)
//  b
49   :     LoadLocalVar  : var = 1(b)
//  (a != b)
50   :     CompareReference
//  (a != b)
51   :     OpNot         : type = Bool
//  (a != b)
52   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b))
53   :     OpConcat      
//  ", "
54   :     LoadValue     : value = <String, , >
//  (((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ")
55   :     OpConcat      
//  a
56   :     LoadLocalVar  : var = 0(a)
//  c
57   :     LoadLocalVar  : var = 2(c)
//  (a == c)
58   :     CompareReference
//  (a == c)
59   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c))
60   :     OpConcat      
//  ", "
61   :     LoadValue     : value = <String, , >
//  (((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ")
62   :     OpConcat      
//  b
63   :     LoadLocalVar  : var = 1(b)
//  c
64   :     LoadLocalVar  : var = 2(c)
//  (b == c)
65   :     CompareReference
//  (b == c)
66   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c))
67   :     OpConcat      
//  ", "
68   :     LoadValue     : value = <String, , >
//  (((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ")
69   :     OpConcat      
//  a
70   :     LoadLocalVar  : var = 0(a)
//  a
71   :     LoadLocalVar  : var = 0(a)
//  (a == a)
72   :     CompareReference
//  (a == a)
73   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a))
74   :     OpConcat      
//  ", "
75   :     LoadValue     : value = <String, , >
//  (((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a)) & ", ")
76   :     OpConcat      
//  b
77   :     LoadLocalVar  : var = 1(b)
//  b
78   :     LoadLocalVar  : var = 1(b)
//  (b == b)
79   :     CompareReference
//  (b == b)
80   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a)) & ", ") & (b == b))
81   :     OpConcat      
//  ", "
82   :     LoadValue     : value = <String, , >
//  (((((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a)) & ", ") & (b == b)) & ", ")
83   :     OpConcat      
//  c
84   :     LoadLocalVar  : var = 2(c)
//  c
85   :     LoadLocalVar  : var = 2(c)
//  (c == c)
86   :     CompareReference
//  (c == c)
87   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a)) & ", ") & (b == b)) & ", ") & (c == c))
88   :     OpConcat      
//  return ((((((((((((((((((((a is null & ", ") & a is not null) & ", ") & (a == b)) & ", ") & b is null) & ", ") & b is not null) & ", ") & (a != b)) & ", ") & (a == c)) & ", ") & (b == c)) & ", ") & (a == a)) & ", ") & (b == b)) & ", ") & (c == c));
89   :     Return        
//  func main() : (string)
90   :     LoadValue     : value = <null>
//  func main() : (string)
91   :     Return        
