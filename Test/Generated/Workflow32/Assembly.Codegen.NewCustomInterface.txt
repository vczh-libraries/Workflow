========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
IMyInterface::Get50 (2 .. 5)
    Arguments:
    Captured Variables:
    Local Variables:

main (6 .. 45)
    Arguments:
    Captured Variables:
    Local Variables:
        begin
        end
        xs

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

<method:CreateEnumerator<IMyInterface>(3)> in main (46 .. 62)
    Arguments:
    Captured Variables:
        <captured>begin
        <captured>end
        <captured-this>0
    Local Variables:

<method:Get100<IMyInterface>(4)> in main (93 .. 99)
    Arguments:
    Captured Variables:
        <captured>begin
        <captured>end
        <captured-this>0
    Local Variables:

<method:GetCurrent<system::Enumerator>(5)> in <method:CreateEnumerator<IMyInterface>(3)> in main (63 .. 68)
    Arguments:
    Captured Variables:
        <captured>index
        <captured>begin
        <captured>end
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:GetIndex<system::Enumerator>(6)> in <method:CreateEnumerator<IMyInterface>(3)> in main (69 .. 72)
    Arguments:
    Captured Variables:
        <captured>index
        <captured>begin
        <captured>end
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:Next<system::Enumerator>(7)> in <method:CreateEnumerator<IMyInterface>(3)> in main (73 .. 92)
    Arguments:
    Captured Variables:
        <captured>index
        <captured>begin
        <captured>end
        <captured-this>0
        <captured-this>1
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  50
2    :     LoadValue     : value = <I4, 50>
//  return 50;
3    :     Return        
//  func Get50() : (int)
4    :     LoadValue     : value = <null>
//  func Get50() : (int)
5    :     Return        
//  1
6    :     LoadValue     : value = <I4, 1>
//  var begin = 1;
7    :     StoreLocalVar : var = 0(begin)
//  5
8    :     LoadValue     : value = <I4, 5>
//  var end = 5;
9    :     StoreLocalVar : var = 1(end)
//  new (IMyInterface^)
10   :     LoadLocalVar  : var = 0(begin)
//  new (IMyInterface^)
11   :     LoadLocalVar  : var = 1(end)
//  new (IMyInterface^)
12   :     LoadValue     : value = <null>
//  new (IMyInterface^)
13   :     CreateClosureContext: stackPatternCount = 3
//  new (IMyInterface^)
14   :     LoadMethodInfo: methodInfo = CreateEnumerator<system::Enumerable>
//  func CreateEnumerator() : (Enumerator^)
15   :     LoadFunction  : func = 3(<method:CreateEnumerator<IMyInterface>(3)> in main)
//  new (IMyInterface^)
16   :     LoadMethodInfo: methodInfo = Get100<IMyInterface>
//  func Get100() : (int)
17   :     LoadFunction  : func = 4(<method:Get100<IMyInterface>(4)> in main)
//  new (IMyInterface^)
18   :     CreateInterface: methodInfo = <IMyInterface>, stackPatternCount = 4
//  var xs = new (IMyInterface^)
19   :     StoreLocalVar : var = 2(xs)
//  "["
20   :     LoadValue     : value = <String, [>
//  xs
21   :     LoadLocalVar  : var = 2(xs)
//  xs.Get100()
22   :     InvokeMethod  : methodInfo = Get100<IMyInterface>, stackPatternCount = 0
//  xs.Get100()
23   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ("[" & xs.Get100())
24   :     OpConcat      
//  "]["
25   :     LoadValue     : value = <String, ][>
//  (("[" & xs.Get100()) & "][")
26   :     OpConcat      
//  xs
27   :     LoadLocalVar  : var = 2(xs)
//  xs
28   :     ConvertToType : flag = SharedPtr, typeDescriptor = system::Enumerable
//  CustomInterfaceProcessor::Sum(xs)
29   :     LoadValue     : value = <null>
//  CustomInterfaceProcessor::Sum(xs)
30   :     InvokeMethod  : methodInfo = Sum<test::CustomInterfaceProcessor>, stackPatternCount = 1
//  CustomInterfaceProcessor::Sum(xs)
31   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs))
32   :     OpConcat      
//  "]["
33   :     LoadValue     : value = <String, ][>
//  (((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][")
34   :     OpConcat      
//  xs
35   :     LoadLocalVar  : var = 2(xs)
//  xs
36   :     ConvertToType : flag = SharedPtr, typeDescriptor = system::Enumerable
//  CustomInterfaceProcessor::Sum(xs)
37   :     LoadValue     : value = <null>
//  CustomInterfaceProcessor::Sum(xs)
38   :     InvokeMethod  : methodInfo = Sum<test::CustomInterfaceProcessor>, stackPatternCount = 1
//  CustomInterfaceProcessor::Sum(xs)
39   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs))
40   :     OpConcat      
//  "]"
41   :     LoadValue     : value = <String, ]>
//  (((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs)) & "]")
42   :     OpConcat      
//  return (((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs)) & "]");
43   :     Return        
//  func main() : (string)
44   :     LoadValue     : value = <null>
//  func main() : (string)
45   :     Return        
//  1
46   :     LoadValue     : value = <I4, 1>
//  (-1)
47   :     OpNegative    : type = I4
//  new (Enumerator^)
48   :     LoadCapturedVar: var = 0(<captured>begin)
//  new (Enumerator^)
49   :     LoadCapturedVar: var = 1(<captured>end)
//  new (Enumerator^)
50   :     LoadCapturedVar: var = 2(<captured-this>0)
//  new (Enumerator^)
51   :     LoadValue     : value = <null>
//  new (Enumerator^)
52   :     CreateClosureContext: stackPatternCount = 5
//  new (Enumerator^)
53   :     LoadMethodInfo: methodInfo = GetCurrent<system::Enumerator>
//  func GetCurrent() : (object)
54   :     LoadFunction  : func = 5(<method:GetCurrent<system::Enumerator>(5)> in <method:CreateEnumerator<IMyInterface>(3)> in main)
//  new (Enumerator^)
55   :     LoadMethodInfo: methodInfo = GetIndex<system::Enumerator>
//  func GetIndex() : (int)
56   :     LoadFunction  : func = 6(<method:GetIndex<system::Enumerator>(6)> in <method:CreateEnumerator<IMyInterface>(3)> in main)
//  new (Enumerator^)
57   :     LoadMethodInfo: methodInfo = Next<system::Enumerator>
//  func Next() : (bool)
58   :     LoadFunction  : func = 7(<method:Next<system::Enumerator>(7)> in <method:CreateEnumerator<IMyInterface>(3)> in main)
//  new (Enumerator^)
59   :     CreateInterface: methodInfo = <system::Enumerator>, stackPatternCount = 6
//  return new (Enumerator^)
60   :     Return        
//  func CreateEnumerator() : (Enumerator^)
61   :     LoadValue     : value = <null>
//  func CreateEnumerator() : (Enumerator^)
62   :     Return        
//  begin
63   :     LoadCapturedVar: var = 1(<captured>begin)
//  index
64   :     LoadCapturedVar: var = 0(<captured>index)
//  (begin + index)
65   :     OpAdd         : type = I4
//  return (begin + index);
66   :     Return        
//  func GetCurrent() : (object)
67   :     LoadValue     : value = <null>
//  func GetCurrent() : (object)
68   :     Return        
//  index
69   :     LoadCapturedVar: var = 0(<captured>index)
//  return index;
70   :     Return        
//  func GetIndex() : (int)
71   :     LoadValue     : value = <null>
//  func GetIndex() : (int)
72   :     Return        
//  index
73   :     LoadCapturedVar: var = 0(<captured>index)
//  end
74   :     LoadCapturedVar: var = 2(<captured>end)
//  begin
75   :     LoadCapturedVar: var = 1(<captured>begin)
//  (end - begin)
76   :     OpSub         : type = I4
//  (index == (end - begin))
77   :     CompareValue  
//  if ((index == (end - begin)))
78   :     OpNot         : type = Bool
//  if ((index == (end - begin)))
79   :     JumpIf        : label = 83
//  false
80   :     LoadValue     : value = <Bool, false>
//  return false;
81   :     Return        
//  if ((index == (end - begin)))
82   :     Jump          : label = 91
//  index
83   :     LoadCapturedVar: var = 0(<captured>index)
//  1
84   :     LoadValue     : value = <I4, 1>
//  (index + 1)
85   :     OpAdd         : type = I4
//  (index = (index + 1))
86   :     Duplicate     : stackPatternCount = 0
//  (index = (index + 1))
87   :     StoreCapturedVar: var = 0
//  (index = (index + 1));
88   :     Pop           
//  true
89   :     LoadValue     : value = <Bool, true>
//  return true;
90   :     Return        
//  func Next() : (bool)
91   :     LoadValue     : value = <null>
//  func Next() : (bool)
92   :     Return        
//  Get50()
93   :     LoadValue     : value = <null>
//  Get50()
94   :     InvokeMethod  : methodInfo = Get50<IMyInterface>, stackPatternCount = 0
//  2
95   :     LoadValue     : value = <I4, 2>
//  (Get50() * 2)
96   :     OpMul         : type = I4
//  return (Get50() * 2);
97   :     Return        
//  func Get100() : (int)
98   :     LoadValue     : value = <null>
//  func Get100() : (int)
99   :     Return        
