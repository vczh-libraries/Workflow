========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
main (2 .. 49)
    Arguments:
    Captured Variables:
    Local Variables:
        a
        b
        c
        d

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  typeof(bool)
2    :     LoadValue     : value = <type: system::Boolean>
//  var a = typeof(bool);
3    :     StoreLocalVar : var = 0(a)
//  typeof(string)
4    :     LoadValue     : value = <type: system::String>
//  var b = typeof(string);
5    :     StoreLocalVar : var = 1(b)
//  true
6    :     LoadValue     : value = <Bool, true>
//  type(true)
7    :     GetType       
//  var c = type(true);
8    :     StoreLocalVar : var = 2(c)
//  "text"
9    :     LoadValue     : value = <String, text>
//  type("text")
10   :     GetType       
//  var d = type("text");
11   :     StoreLocalVar : var = 3(d)
//  a
12   :     LoadLocalVar  : var = 0(a)
//  c
13   :     LoadLocalVar  : var = 2(c)
//  (a == c)
14   :     CompareReference
//  (a == c)
15   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
16   :     LoadValue     : value = <String, , >
//  ((a == c) & ", ")
17   :     OpConcat      
//  a
18   :     LoadLocalVar  : var = 0(a)
//  d
19   :     LoadLocalVar  : var = 3(d)
//  (a == d)
20   :     CompareReference
//  (a == d)
21   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((a == c) & ", ") & (a == d))
22   :     OpConcat      
//  ", "
23   :     LoadValue     : value = <String, , >
//  ((((a == c) & ", ") & (a == d)) & ", ")
24   :     OpConcat      
//  b
25   :     LoadLocalVar  : var = 1(b)
//  c
26   :     LoadLocalVar  : var = 2(c)
//  (b == c)
27   :     CompareReference
//  (b == c)
28   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((a == c) & ", ") & (a == d)) & ", ") & (b == c))
29   :     OpConcat      
//  ", "
30   :     LoadValue     : value = <String, , >
//  ((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ")
31   :     OpConcat      
//  b
32   :     LoadLocalVar  : var = 1(b)
//  d
33   :     LoadLocalVar  : var = 3(d)
//  (b == d)
34   :     CompareReference
//  (b == d)
35   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d))
36   :     OpConcat      
//  ", "
37   :     LoadValue     : value = <String, , >
//  ((((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d)) & ", ")
38   :     OpConcat      
//  a
39   :     LoadLocalVar  : var = 0(a)
//  a.GetTypeName()
40   :     InvokeMethod  : methodInfo = GetTypeName<system::reflection::TypeDescriptor>, stackPatternCount = 0
//  (((((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d)) & ", ") & a.GetTypeName())
41   :     OpConcat      
//  ", "
42   :     LoadValue     : value = <String, , >
//  ((((((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d)) & ", ") & a.GetTypeName()) & ", ")
43   :     OpConcat      
//  b
44   :     LoadLocalVar  : var = 1(b)
//  b.GetTypeName()
45   :     InvokeMethod  : methodInfo = GetTypeName<system::reflection::TypeDescriptor>, stackPatternCount = 0
//  (((((((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d)) & ", ") & a.GetTypeName()) & ", ") & b.GetTypeName())
46   :     OpConcat      
//  return (((((((((((a == c) & ", ") & (a == d)) & ", ") & (b == c)) & ", ") & (b == d)) & ", ") & a.GetTypeName()) & ", ") & b.GetTypeName());
47   :     Return        
//  func main() : (string)
48   :     LoadValue     : value = <null>
//  func main() : (string)
49   :     Return        
