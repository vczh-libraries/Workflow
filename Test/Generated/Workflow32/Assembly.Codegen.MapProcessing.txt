========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
main (2 .. 69)
    Arguments:
    Captured Variables:
    Local Variables:
        xs
        s1
        s2

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  "e"
2    :     LoadValue     : value = <String, e>
//  5
3    :     LoadValue     : value = <I4, 5>
//  "d"
4    :     LoadValue     : value = <String, d>
//  4
5    :     LoadValue     : value = <I4, 4>
//  "c"
6    :     LoadValue     : value = <String, c>
//  3
7    :     LoadValue     : value = <I4, 3>
//  "b"
8    :     LoadValue     : value = <String, b>
//  2
9    :     LoadValue     : value = <I4, 2>
//  "a"
10   :     LoadValue     : value = <String, a>
//  1
11   :     LoadValue     : value = <I4, 1>
//  {"a" : 1; "b" : 2; "c" : 3; "d" : 4; "e" : 5;}
12   :     NewDictionary : stackPatternCount = 10
//  var xs = {"a" : 1; "b" : 2; "c" : 3; "d" : 4; "e" : 5;};
13   :     StoreLocalVar : var = 0(xs)
//  xs
14   :     LoadLocalVar  : var = 0(xs)
//  xs.Count
15   :     InvokeMethod  : methodInfo = GetCount<system::ReadonlyDictionary>, stackPatternCount = 0
//  xs.Count
16   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
17   :     LoadValue     : value = <String, , >
//  (xs.Count & ", ")
18   :     OpConcat      
//  "a"
19   :     LoadValue     : value = <String, a>
//  xs
20   :     LoadLocalVar  : var = 0(xs)
//  xs["a"]
21   :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  xs["a"]
22   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((xs.Count & ", ") & xs["a"])
23   :     OpConcat      
//  ", "
24   :     LoadValue     : value = <String, , >
//  (((xs.Count & ", ") & xs["a"]) & ", ")
25   :     OpConcat      
//  "e"
26   :     LoadValue     : value = <String, e>
//  xs
27   :     LoadLocalVar  : var = 0(xs)
//  xs["e"]
28   :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  xs["e"]
29   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((xs.Count & ", ") & xs["a"]) & ", ") & xs["e"])
30   :     OpConcat      
//  var s1 = ((((xs.Count & ", ") & xs["a"]) & ", ") & xs["e"]);
31   :     StoreLocalVar : var = 1(s1)
//  "e"
32   :     LoadValue     : value = <String, e>
//  (xs["e"] = 6)
33   :     Duplicate     : stackPatternCount = 0
//  6
34   :     LoadValue     : value = <I4, 6>
//  xs
35   :     LoadLocalVar  : var = 0(xs)
//  (xs["e"] = 6)
36   :     InvokeMethod  : methodInfo = Set<system::Dictionary>, stackPatternCount = 2
//  (xs["e"] = 6)
37   :     Pop           
//  (xs["e"] = 6);
38   :     Pop           
//  "f"
39   :     LoadValue     : value = <String, f>
//  7
40   :     LoadValue     : value = <I4, 7>
//  xs
41   :     LoadLocalVar  : var = 0(xs)
//  xs.Set("f", 7)
42   :     InvokeMethod  : methodInfo = Set<system::Dictionary>, stackPatternCount = 2
//  xs.Set("f", 7);
43   :     Pop           
//  xs
44   :     LoadLocalVar  : var = 0(xs)
//  xs.Count
45   :     InvokeMethod  : methodInfo = GetCount<system::ReadonlyDictionary>, stackPatternCount = 0
//  xs.Count
46   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
47   :     LoadValue     : value = <String, , >
//  (xs.Count & ", ")
48   :     OpConcat      
//  "a"
49   :     LoadValue     : value = <String, a>
//  xs
50   :     LoadLocalVar  : var = 0(xs)
//  xs["a"]
51   :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  xs["a"]
52   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((xs.Count & ", ") & xs["a"])
53   :     OpConcat      
//  ", "
54   :     LoadValue     : value = <String, , >
//  (((xs.Count & ", ") & xs["a"]) & ", ")
55   :     OpConcat      
//  "e"
56   :     LoadValue     : value = <String, e>
//  xs
57   :     LoadLocalVar  : var = 0(xs)
//  xs["e"]
58   :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  xs["e"]
59   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((xs.Count & ", ") & xs["a"]) & ", ") & xs["e"])
60   :     OpConcat      
//  var s2 = ((((xs.Count & ", ") & xs["a"]) & ", ") & xs["e"]);
61   :     StoreLocalVar : var = 2(s2)
//  s1
62   :     LoadLocalVar  : var = 1(s1)
//  ", "
63   :     LoadValue     : value = <String, , >
//  (s1 & ", ")
64   :     OpConcat      
//  s2
65   :     LoadLocalVar  : var = 2(s2)
//  ((s1 & ", ") & s2)
66   :     OpConcat      
//  return ((s1 & ", ") & s2);
67   :     Return        
//  func main() : (string)
68   :     LoadValue     : value = <null>
//  func main() : (string)
69   :     Return        
