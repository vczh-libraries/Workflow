========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
main (2 .. 134)
    Arguments:
    Captured Variables:
    Local Variables:
        p0
        p1
        p2
        p3
        p4
        q1
        q2
        q3

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  {x : 0;}
2    :     CreateStruct  : flag = BoxedValue, typeDescriptor = Point
//  0
3    :     LoadValue     : value = <I8, 0>
//  {x : 0;}
4    :     UpdateProperty: propertyInfo = x<Point>
//  var p0 = {x : 0;} of (Point);
5    :     StoreLocalVar : var = 0(p0)
//  {y : 0;}
6    :     CreateStruct  : flag = BoxedValue, typeDescriptor = Point
//  0
7    :     LoadValue     : value = <I8, 0>
//  {y : 0;}
8    :     UpdateProperty: propertyInfo = y<Point>
//  var p1 = {y : 0;} of (Point);
9    :     StoreLocalVar : var = 1(p1)
//  {y : 0; x : 0;}
10   :     CreateStruct  : flag = BoxedValue, typeDescriptor = Point
//  0
11   :     LoadValue     : value = <I8, 0>
//  {y : 0; x : 0;}
12   :     UpdateProperty: propertyInfo = y<Point>
//  0
13   :     LoadValue     : value = <I8, 0>
//  {y : 0; x : 0;}
14   :     UpdateProperty: propertyInfo = x<Point>
//  var p2 = {y : 0; x : 0;} of (Point);
15   :     StoreLocalVar : var = 2(p2)
//  {}
16   :     CreateStruct  : flag = BoxedValue, typeDescriptor = Point
//  var p3 = {} of (Point);
17   :     StoreLocalVar : var = 3(p3)
//  {x : 1; y : 1;}
18   :     CreateStruct  : flag = BoxedValue, typeDescriptor = Point
//  1
19   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
20   :     UpdateProperty: propertyInfo = x<Point>
//  1
21   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
22   :     UpdateProperty: propertyInfo = y<Point>
//  var p4 = {x : 1; y : 1;} of (Point);
23   :     StoreLocalVar : var = 4(p4)
//  p2
24   :     LoadLocalVar  : var = 2(p2)
//  p2
25   :     Duplicate     : stackPatternCount = 0
//  p2
26   :     LoadValue     : value = <null>
//  p2
27   :     CompareReference
//  p2
28   :     JumpIf        : label = 31
//  p2
29   :     ConvertToType : flag = BoxedValue, typeDescriptor = Point
//  p2
30   :     Jump          : label = 32
//  p2
31   :     LoadValue     : value = <null>
//  var q1 : Point? = p2;
32   :     StoreLocalVar : var = 5(q1)
//  p4
33   :     LoadLocalVar  : var = 4(p4)
//  p4
34   :     Duplicate     : stackPatternCount = 0
//  p4
35   :     LoadValue     : value = <null>
//  p4
36   :     CompareReference
//  p4
37   :     JumpIf        : label = 40
//  p4
38   :     ConvertToType : flag = BoxedValue, typeDescriptor = Point
//  p4
39   :     Jump          : label = 41
//  p4
40   :     LoadValue     : value = <null>
//  var q2 : Point? = p4;
41   :     StoreLocalVar : var = 6(q2)
//  null
42   :     LoadValue     : value = <null>
//  var q3 : Point? = null;
43   :     StoreLocalVar : var = 7(q3)
//  p0
44   :     LoadLocalVar  : var = 0(p0)
//  p1
45   :     LoadLocalVar  : var = 1(p1)
//  (p0 == p1)
46   :     CompareValue  
//  (p0 == p1)
47   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
48   :     LoadValue     : value = <Bool, , >
//  ((p0 == p1) & ", ")
49   :     OpConcat      
//  p1
50   :     LoadLocalVar  : var = 1(p1)
//  p2
51   :     LoadLocalVar  : var = 2(p2)
//  (p1 == p2)
52   :     CompareValue  
//  (p1 == p2)
53   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((p0 == p1) & ", ") & (p1 == p2))
54   :     OpConcat      
//  ", "
55   :     LoadValue     : value = <Bool, , >
//  ((((p0 == p1) & ", ") & (p1 == p2)) & ", ")
56   :     OpConcat      
//  p2
57   :     LoadLocalVar  : var = 2(p2)
//  p3
58   :     LoadLocalVar  : var = 3(p3)
//  (p2 == p3)
59   :     CompareValue  
//  (p2 == p3)
60   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3))
61   :     OpConcat      
//  ", "
62   :     LoadValue     : value = <Bool, , >
//  ((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ")
63   :     OpConcat      
//  p3
64   :     LoadLocalVar  : var = 3(p3)
//  p4
65   :     LoadLocalVar  : var = 4(p4)
//  (p3 == p4)
66   :     CompareValue  
//  (p3 == p4)
67   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4))
68   :     OpConcat      
//  ", "
69   :     LoadValue     : value = <Bool, , >
//  ((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ")
70   :     OpConcat      
//  q1
71   :     LoadLocalVar  : var = 5(q1)
//  q3
72   :     LoadLocalVar  : var = 7(q3)
//  (q1 == q3)
73   :     CompareValue  
//  (q1 == q3)
74   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
75   :     LoadValue     : value = <Bool, , >
//  ((q1 == q3) & ", ")
76   :     OpConcat      
//  q2
77   :     LoadLocalVar  : var = 6(q2)
//  q3
78   :     LoadLocalVar  : var = 7(q3)
//  (q2 == q3)
79   :     CompareValue  
//  (q2 == q3)
80   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((q1 == q3) & ", ") & (q2 == q3))
81   :     OpConcat      
//  ", "
82   :     LoadValue     : value = <Bool, , >
//  ((((q1 == q3) & ", ") & (q2 == q3)) & ", ")
83   :     OpConcat      
//  q3
84   :     LoadLocalVar  : var = 7(q3)
//  q3
85   :     LoadLocalVar  : var = 7(q3)
//  (q3 == q3)
86   :     CompareValue  
//  (q3 == q3)
87   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))
88   :     OpConcat      
//  (((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3)))
89   :     OpConcat      
//  ", "
90   :     LoadValue     : value = <Bool, , >
//  ((((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))) & ", ")
91   :     OpConcat      
//  q1
92   :     LoadLocalVar  : var = 5(q1)
//  p2
93   :     LoadLocalVar  : var = 2(p2)
//  (q1 == p2)
94   :     CompareValue  
//  (q1 == p2)
95   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
96   :     LoadValue     : value = <Bool, , >
//  ((q1 == p2) & ", ")
97   :     OpConcat      
//  q2
98   :     LoadLocalVar  : var = 6(q2)
//  p2
99   :     LoadLocalVar  : var = 2(p2)
//  (q2 == p2)
100  :     CompareValue  
//  (q2 == p2)
101  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((q1 == p2) & ", ") & (q2 == p2))
102  :     OpConcat      
//  ", "
103  :     LoadValue     : value = <Bool, , >
//  ((((q1 == p2) & ", ") & (q2 == p2)) & ", ")
104  :     OpConcat      
//  q3
105  :     LoadLocalVar  : var = 7(q3)
//  p2
106  :     LoadLocalVar  : var = 2(p2)
//  (q3 == p2)
107  :     CompareValue  
//  (q3 == p2)
108  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((q1 == p2) & ", ") & (q2 == p2)) & ", ") & (q3 == p2))
109  :     OpConcat      
//  (((((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))) & ", ") & (((((q1 == p2) & ", ") & (q2 == p2)) & ", ") & (q3 == p2)))
110  :     OpConcat      
//  ", "
111  :     LoadValue     : value = <Bool, , >
//  ((((((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))) & ", ") & (((((q1 == p2) & ", ") & (q2 == p2)) & ", ") & (q3 == p2))) & ", ")
112  :     OpConcat      
//  q1
113  :     LoadLocalVar  : var = 5(q1)
//  p4
114  :     LoadLocalVar  : var = 4(p4)
//  (q1 == p4)
115  :     CompareValue  
//  (q1 == p4)
116  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
117  :     LoadValue     : value = <Bool, , >
//  ((q1 == p4) & ", ")
118  :     OpConcat      
//  q2
119  :     LoadLocalVar  : var = 6(q2)
//  p4
120  :     LoadLocalVar  : var = 4(p4)
//  (q2 == p4)
121  :     CompareValue  
//  (q2 == p4)
122  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((q1 == p4) & ", ") & (q2 == p4))
123  :     OpConcat      
//  ", "
124  :     LoadValue     : value = <Bool, , >
//  ((((q1 == p4) & ", ") & (q2 == p4)) & ", ")
125  :     OpConcat      
//  q3
126  :     LoadLocalVar  : var = 7(q3)
//  p4
127  :     LoadLocalVar  : var = 4(p4)
//  (q3 == p4)
128  :     CompareValue  
//  (q3 == p4)
129  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  (((((q1 == p4) & ", ") & (q2 == p4)) & ", ") & (q3 == p4))
130  :     OpConcat      
//  (((((((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))) & ", ") & (((((q1 == p2) & ", ") & (q2 == p2)) & ", ") & (q3 == p2))) & ", ") & (((((q1 == p4) & ", ") & (q2 == p4)) & ", ") & (q3 == p4)))
131  :     OpConcat      
//  return (((((((((((((p0 == p1) & ", ") & (p1 == p2)) & ", ") & (p2 == p3)) & ", ") & (p3 == p4)) & ", ") & (((((q1 == q3) & ", ") & (q2 == q3)) & ", ") & (q3 == q3))) & ", ") & (((((q1 == p2) & ", ") & (q2 == p2)) & ", ") & (q3 == p2))) & ", ") & (((((q1 == p4) & ", ") & (q2 == p4)) & ", ") & (q3 == p4)));
132  :     Return        
//  func main() : (string)
133  :     LoadValue     : value = <null>
//  func main() : (string)
134  :     Return        
