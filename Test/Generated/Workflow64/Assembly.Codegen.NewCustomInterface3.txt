========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
MyClass::#ctor (2 .. 21)
    Arguments:
        _begin
        _end
    Captured Variables:
        <captured-this>0
    Local Variables:

MyClass::Get50 (22 .. 25)
    Arguments:
    Captured Variables:
    Local Variables:

MyClass::CreateMyInterface (26 .. 36)
    Arguments:
    Captured Variables:
        <captured-this>0
    Local Variables:

main (93 .. 126)
    Arguments:
    Captured Variables:
    Local Variables:
        x
        xs

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

<method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface (37 .. 52)
    Arguments:
    Captured Variables:
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:Get100<IMyInterface3>(6)> in MyClass::CreateMyInterface (86 .. 92)
    Arguments:
    Captured Variables:
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:GetCurrent<system::Enumerator>(7)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface (53 .. 59)
    Arguments:
    Captured Variables:
        <captured>index
        <captured-this>0
        <captured-this>1
        <captured-this>2
    Local Variables:

<method:GetIndex<system::Enumerator>(8)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface (60 .. 63)
    Arguments:
    Captured Variables:
        <captured>index
        <captured-this>0
        <captured-this>1
        <captured-this>2
    Local Variables:

<method:Next<system::Enumerator>(9)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface (64 .. 85)
    Arguments:
    Captured Variables:
        <captured>index
        <captured-this>0
        <captured-this>1
        <captured-this>2
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  1
2    :     LoadValue     : value = <I8, 1>
//  (-1)
3    :     OpNegative    : type = I8
//  var begin : int = (-1);
4    :     LoadCapturedVar: var = 0(<captured-this>0)
//  var begin : int = (-1);
5    :     SetProperty   : propertyInfo = begin<MyClass>
//  1
6    :     LoadValue     : value = <I8, 1>
//  (-1)
7    :     OpNegative    : type = I8
//  var end : int = (-1);
8    :     LoadCapturedVar: var = 0(<captured-this>0)
//  var end : int = (-1);
9    :     SetProperty   : propertyInfo = end<MyClass>
//  _begin
10   :     LoadLocalVar  : var = 0(_begin)
//  (begin = _begin)
11   :     Duplicate     : stackPatternCount = 0
//  (begin = _begin)
12   :     LoadCapturedVar: var = 0(<captured-this>0)
//  (begin = _begin)
13   :     SetProperty   : propertyInfo = begin<MyClass>
//  (begin = _begin);
14   :     Pop           
//  _end
15   :     LoadLocalVar  : var = 1(_end)
//  (end = _end)
16   :     Duplicate     : stackPatternCount = 0
//  (end = _end)
17   :     LoadCapturedVar: var = 0(<captured-this>0)
//  (end = _end)
18   :     SetProperty   : propertyInfo = end<MyClass>
//  (end = _end);
19   :     Pop           
//  new (_begin : int, _end : int)
20   :     LoadValue     : value = <null>
//  new (_begin : int, _end : int)
21   :     Return        
//  50
22   :     LoadValue     : value = <I8, 50>
//  return 50;
23   :     Return        
//  func Get50() : (int)
24   :     LoadValue     : value = <null>
//  func Get50() : (int)
25   :     Return        
//  new (IMyInterface3^)
26   :     LoadCapturedVar: var = 0(<captured-this>0)
//  new (IMyInterface3^)
27   :     LoadValue     : value = <null>
//  new (IMyInterface3^)
28   :     CreateClosureContext: stackPatternCount = 2
//  new (IMyInterface3^)
29   :     LoadMethodInfo: methodInfo = CreateEnumerator<system::Enumerable>
//  func CreateEnumerator() : (Enumerator^)
30   :     LoadFunction  : func = 5(<method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface)
//  new (IMyInterface3^)
31   :     LoadMethodInfo: methodInfo = Get100<IMyInterface3>
//  func Get100() : (int)
32   :     LoadFunction  : func = 6(<method:Get100<IMyInterface3>(6)> in MyClass::CreateMyInterface)
//  new (IMyInterface3^)
33   :     CreateInterface: methodInfo = <IMyInterface3>, stackPatternCount = 4
//  return new (IMyInterface3^)
34   :     Return        
//  func CreateMyInterface() : (IMyInterface3^)
35   :     LoadValue     : value = <null>
//  func CreateMyInterface() : (IMyInterface3^)
36   :     Return        
//  1
37   :     LoadValue     : value = <I8, 1>
//  (-1)
38   :     OpNegative    : type = I8
//  new (Enumerator^)
39   :     LoadCapturedVar: var = 0(<captured-this>0)
//  new (Enumerator^)
40   :     LoadCapturedVar: var = 1(<captured-this>1)
//  new (Enumerator^)
41   :     LoadValue     : value = <null>
//  new (Enumerator^)
42   :     CreateClosureContext: stackPatternCount = 4
//  new (Enumerator^)
43   :     LoadMethodInfo: methodInfo = GetCurrent<system::Enumerator>
//  func GetCurrent() : (object)
44   :     LoadFunction  : func = 7(<method:GetCurrent<system::Enumerator>(7)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface)
//  new (Enumerator^)
45   :     LoadMethodInfo: methodInfo = GetIndex<system::Enumerator>
//  func GetIndex() : (int)
46   :     LoadFunction  : func = 8(<method:GetIndex<system::Enumerator>(8)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface)
//  new (Enumerator^)
47   :     LoadMethodInfo: methodInfo = Next<system::Enumerator>
//  func Next() : (bool)
48   :     LoadFunction  : func = 9(<method:Next<system::Enumerator>(9)> in <method:CreateEnumerator<IMyInterface3>(5)> in MyClass::CreateMyInterface)
//  new (Enumerator^)
49   :     CreateInterface: methodInfo = <system::Enumerator>, stackPatternCount = 6
//  return new (Enumerator^)
50   :     Return        
//  func CreateEnumerator() : (Enumerator^)
51   :     LoadValue     : value = <null>
//  func CreateEnumerator() : (Enumerator^)
52   :     Return        
//  begin
53   :     LoadCapturedVar: var = 1(<captured-this>0)
//  begin
54   :     GetProperty   : propertyInfo = begin<MyClass>
//  index
55   :     LoadCapturedVar: var = 0(<captured>index)
//  (begin + index)
56   :     OpAdd         : type = I8
//  return (begin + index);
57   :     Return        
//  func GetCurrent() : (object)
58   :     LoadValue     : value = <null>
//  func GetCurrent() : (object)
59   :     Return        
//  index
60   :     LoadCapturedVar: var = 0(<captured>index)
//  return index;
61   :     Return        
//  func GetIndex() : (int)
62   :     LoadValue     : value = <null>
//  func GetIndex() : (int)
63   :     Return        
//  index
64   :     LoadCapturedVar: var = 0(<captured>index)
//  end
65   :     LoadCapturedVar: var = 1(<captured-this>0)
//  end
66   :     GetProperty   : propertyInfo = end<MyClass>
//  begin
67   :     LoadCapturedVar: var = 1(<captured-this>0)
//  begin
68   :     GetProperty   : propertyInfo = begin<MyClass>
//  (end - begin)
69   :     OpSub         : type = I8
//  (index == (end - begin))
70   :     CompareValue  
//  if ((index == (end - begin)))
71   :     OpNot         : type = Bool
//  if ((index == (end - begin)))
72   :     JumpIf        : label = 76
//  false
73   :     LoadValue     : value = <Bool, false>
//  return false;
74   :     Return        
//  if ((index == (end - begin)))
75   :     Jump          : label = 84
//  index
76   :     LoadCapturedVar: var = 0(<captured>index)
//  1
77   :     LoadValue     : value = <I8, 1>
//  (index + 1)
78   :     OpAdd         : type = I8
//  (index = (index + 1))
79   :     Duplicate     : stackPatternCount = 0
//  (index = (index + 1))
80   :     StoreCapturedVar: var = 0
//  (index = (index + 1));
81   :     Pop           
//  true
82   :     LoadValue     : value = <Bool, true>
//  return true;
83   :     Return        
//  func Next() : (bool)
84   :     LoadValue     : value = <null>
//  func Next() : (bool)
85   :     Return        
//  Get50()
86   :     LoadValue     : value = <null>
//  Get50()
87   :     InvokeMethod  : methodInfo = Get50<MyClass>, stackPatternCount = 0
//  2
88   :     LoadValue     : value = <I8, 2>
//  (Get50() * 2)
89   :     OpMul         : type = I8
//  return (Get50() * 2);
90   :     Return        
//  func Get100() : (int)
91   :     LoadValue     : value = <null>
//  func Get100() : (int)
92   :     Return        
//  1
93   :     LoadValue     : value = <I8, 1>
//  5
94   :     LoadValue     : value = <I8, 5>
//  new (MyClass^)(1, 5)
95   :     LoadValue     : value = <null>
//  new (MyClass^)(1, 5)
96   :     InvokeMethod  : methodInfo = <MyClass>, stackPatternCount = 2
//  var x = new (MyClass^)(1, 5);
97   :     StoreLocalVar : var = 0(x)
//  x
98   :     LoadLocalVar  : var = 0(x)
//  x.CreateMyInterface()
99   :     InvokeMethod  : methodInfo = CreateMyInterface<MyClass>, stackPatternCount = 0
//  var xs = x.CreateMyInterface();
100  :     StoreLocalVar : var = 1(xs)
//  "["
101  :     LoadValue     : value = <Bool, [>
//  xs
102  :     LoadLocalVar  : var = 1(xs)
//  xs.Get100()
103  :     InvokeMethod  : methodInfo = Get100<IMyInterface3>, stackPatternCount = 0
//  xs.Get100()
104  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ("[" & xs.Get100())
105  :     OpConcat      
//  "]["
106  :     LoadValue     : value = <Bool, ][>
//  (("[" & xs.Get100()) & "][")
107  :     OpConcat      
//  xs
108  :     LoadLocalVar  : var = 1(xs)
//  xs
109  :     ConvertToType : flag = SharedPtr, typeDescriptor = system::Enumerable
//  CustomInterfaceProcessor::Sum(xs)
110  :     LoadValue     : value = <null>
//  CustomInterfaceProcessor::Sum(xs)
111  :     InvokeMethod  : methodInfo = Sum<test::CustomInterfaceProcessor>, stackPatternCount = 1
//  CustomInterfaceProcessor::Sum(xs)
112  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs))
113  :     OpConcat      
//  "]["
114  :     LoadValue     : value = <Bool, ][>
//  (((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][")
115  :     OpConcat      
//  xs
116  :     LoadLocalVar  : var = 1(xs)
//  xs
117  :     ConvertToType : flag = SharedPtr, typeDescriptor = system::Enumerable
//  CustomInterfaceProcessor::Sum(xs)
118  :     LoadValue     : value = <null>
//  CustomInterfaceProcessor::Sum(xs)
119  :     InvokeMethod  : methodInfo = Sum<test::CustomInterfaceProcessor>, stackPatternCount = 1
//  CustomInterfaceProcessor::Sum(xs)
120  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs))
121  :     OpConcat      
//  "]"
122  :     LoadValue     : value = <Bool, ]>
//  (((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs)) & "]")
123  :     OpConcat      
//  return (((((("[" & xs.Get100()) & "][") & CustomInterfaceProcessor::Sum(xs)) & "][") & CustomInterfaceProcessor::Sum(xs)) & "]");
124  :     Return        
//  func main() : (string)
125  :     LoadValue     : value = <null>
//  func main() : (string)
126  :     Return        
