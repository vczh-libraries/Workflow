========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
main (2 .. 329)
    Arguments:
    Captured Variables:
    Local Variables:
        l1
        l2
        m1
        m2
        result

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  {x : 1; y : 1;}
2    :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
3    :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
4    :     UpdateProperty: propertyInfo = x<test::Point>
//  1
5    :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
6    :     UpdateProperty: propertyInfo = y<test::Point>
//  {y : 1;}
7    :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
8    :     LoadValue     : value = <I8, 1>
//  {y : 1;}
9    :     UpdateProperty: propertyInfo = y<test::Point>
//  {x : 1;}
10   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
11   :     LoadValue     : value = <I8, 1>
//  {x : 1;}
12   :     UpdateProperty: propertyInfo = x<test::Point>
//  {}
13   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  {{} of (Point); {x : 1;} of (Point); {y : 1;} of (Point); {x : 1; y : 1;} of (Point);}
14   :     NewList       : stackPatternCount = 4
//  var l1 : Point[] = {{} of (Point); {x : 1;} of (Point); {y : 1;} of (Point); {x : 1; y : 1;} of (Point);};
15   :     StoreLocalVar : var = 0(l1)
//  {x : 1; y : 1;}
16   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
17   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
18   :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
19   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
20   :     UpdateProperty: propertyInfo = y<IndexPoint>
//  {y : 1;}
21   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
22   :     LoadValue     : value = <I8, 1>
//  {y : 1;}
23   :     UpdateProperty: propertyInfo = y<IndexPoint>
//  {x : 1;}
24   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
25   :     LoadValue     : value = <I8, 1>
//  {x : 1;}
26   :     UpdateProperty: propertyInfo = x<IndexPoint>
//  {}
27   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  {{} of (IndexPoint); {x : 1;} of (IndexPoint); {y : 1;} of (IndexPoint); {x : 1; y : 1;} of (IndexPoint);}
28   :     NewList       : stackPatternCount = 4
//  var l2 : IndexPoint[] = {{} of (IndexPoint); {x : 1;} of (IndexPoint); {y : 1;} of (IndexPoint); {x : 1; y : 1;} of (IndexPoint);};
29   :     StoreLocalVar : var = 1(l2)
//  {x : 1; y : 1;}
30   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
31   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
32   :     UpdateProperty: propertyInfo = x<test::Point>
//  1
33   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
34   :     UpdateProperty: propertyInfo = y<test::Point>
//  3
35   :     LoadValue     : value = <I8, 3>
//  {y : 1;}
36   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
37   :     LoadValue     : value = <I8, 1>
//  {y : 1;}
38   :     UpdateProperty: propertyInfo = y<test::Point>
//  2
39   :     LoadValue     : value = <I8, 2>
//  {x : 1;}
40   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
41   :     LoadValue     : value = <I8, 1>
//  {x : 1;}
42   :     UpdateProperty: propertyInfo = x<test::Point>
//  1
43   :     LoadValue     : value = <I8, 1>
//  {}
44   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  0
45   :     LoadValue     : value = <I8, 0>
//  {{} of (Point) : 0; {x : 1;} of (Point) : 1; {y : 1;} of (Point) : 2; {x : 1; y : 1;} of (Point) : 3;}
46   :     NewDictionary : stackPatternCount = 8
//  var m1 : int[Point] = {{} of (Point) : 0; {x : 1;} of (Point) : 1; {y : 1;} of (Point) : 2; {x : 1; y : 1;} of (Point) : 3;};
47   :     StoreLocalVar : var = 2(m1)
//  {x : 1; y : 1;}
48   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
49   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
50   :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
51   :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
52   :     UpdateProperty: propertyInfo = y<IndexPoint>
//  3
53   :     LoadValue     : value = <I8, 3>
//  {y : 1;}
54   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
55   :     LoadValue     : value = <I8, 1>
//  {y : 1;}
56   :     UpdateProperty: propertyInfo = y<IndexPoint>
//  2
57   :     LoadValue     : value = <I8, 2>
//  {x : 1;}
58   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
59   :     LoadValue     : value = <I8, 1>
//  {x : 1;}
60   :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
61   :     LoadValue     : value = <I8, 1>
//  {}
62   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  0
63   :     LoadValue     : value = <I8, 0>
//  {{} of (IndexPoint) : 0; {x : 1;} of (IndexPoint) : 1; {y : 1;} of (IndexPoint) : 2; {x : 1; y : 1;} of (IndexPoint) : 3;}
64   :     NewDictionary : stackPatternCount = 8
//  var m2 : int[IndexPoint] = {{} of (IndexPoint) : 0; {x : 1;} of (IndexPoint) : 1; {y : 1;} of (IndexPoint) : 2; {x : 1; y : 1;} of (IndexPoint) : 3;};
65   :     StoreLocalVar : var = 3(m2)
//  {x : 2; y : 2;}
66   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  2
67   :     LoadValue     : value = <I8, 2>
//  {x : 2; y : 2;}
68   :     UpdateProperty: propertyInfo = x<test::Point>
//  2
69   :     LoadValue     : value = <I8, 2>
//  {x : 2; y : 2;}
70   :     UpdateProperty: propertyInfo = y<test::Point>
//  l1
71   :     LoadLocalVar  : var = 0(l1)
//  l1.IndexOf({x : 2; y : 2;} of (Point))
72   :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l1.IndexOf({x : 2; y : 2;} of (Point))
73   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ", "
74   :     LoadValue     : value = <Bool, , >
//  (l1.IndexOf({x : 2; y : 2;} of (Point)) & ", ")
75   :     OpConcat      
//  {x : 2; y : 2;}
76   :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  2
77   :     LoadValue     : value = <I8, 2>
//  {x : 2; y : 2;}
78   :     UpdateProperty: propertyInfo = x<IndexPoint>
//  2
79   :     LoadValue     : value = <I8, 2>
//  {x : 2; y : 2;}
80   :     UpdateProperty: propertyInfo = y<IndexPoint>
//  l2
81   :     LoadLocalVar  : var = 1(l2)
//  l2.IndexOf({x : 2; y : 2;} of (IndexPoint))
82   :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l2.IndexOf({x : 2; y : 2;} of (IndexPoint))
83   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((l1.IndexOf({x : 2; y : 2;} of (Point)) & ", ") & l2.IndexOf({x : 2; y : 2;} of (IndexPoint)))
84   :     OpConcat      
//  var result = ((l1.IndexOf({x : 2; y : 2;} of (Point)) & ", ") & l2.IndexOf({x : 2; y : 2;} of (IndexPoint)));
85   :     StoreLocalVar : var = 4(result)
//  result
86   :     LoadLocalVar  : var = 4(result)
//  ", "
87   :     LoadValue     : value = <Bool, , >
//  (result & ", ")
88   :     OpConcat      
//  {x : 0; y : 0;}
89   :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  0
90   :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
91   :     UpdateProperty: propertyInfo = x<test::Point>
//  0
92   :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
93   :     UpdateProperty: propertyInfo = y<test::Point>
//  l1
94   :     LoadLocalVar  : var = 0(l1)
//  l1.IndexOf({x : 0; y : 0;} of (Point))
95   :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l1.IndexOf({x : 0; y : 0;} of (Point))
96   :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l1.IndexOf({x : 0; y : 0;} of (Point)))
97   :     OpConcat      
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 0;} of (Point))))
98   :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 0;} of (Point))))
99   :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 0;} of (Point))));
100  :     Pop           
//  result
101  :     LoadLocalVar  : var = 4(result)
//  ", "
102  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
103  :     OpConcat      
//  {x : 1; y : 0;}
104  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
105  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 0;}
106  :     UpdateProperty: propertyInfo = x<test::Point>
//  0
107  :     LoadValue     : value = <I8, 0>
//  {x : 1; y : 0;}
108  :     UpdateProperty: propertyInfo = y<test::Point>
//  l1
109  :     LoadLocalVar  : var = 0(l1)
//  l1.IndexOf({x : 1; y : 0;} of (Point))
110  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l1.IndexOf({x : 1; y : 0;} of (Point))
111  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l1.IndexOf({x : 1; y : 0;} of (Point)))
112  :     OpConcat      
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 0;} of (Point))))
113  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 0;} of (Point))))
114  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 0;} of (Point))));
115  :     Pop           
//  result
116  :     LoadLocalVar  : var = 4(result)
//  ", "
117  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
118  :     OpConcat      
//  {x : 0; y : 1;}
119  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  0
120  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 1;}
121  :     UpdateProperty: propertyInfo = x<test::Point>
//  1
122  :     LoadValue     : value = <I8, 1>
//  {x : 0; y : 1;}
123  :     UpdateProperty: propertyInfo = y<test::Point>
//  l1
124  :     LoadLocalVar  : var = 0(l1)
//  l1.IndexOf({x : 0; y : 1;} of (Point))
125  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l1.IndexOf({x : 0; y : 1;} of (Point))
126  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l1.IndexOf({x : 0; y : 1;} of (Point)))
127  :     OpConcat      
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 1;} of (Point))))
128  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 1;} of (Point))))
129  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l1.IndexOf({x : 0; y : 1;} of (Point))));
130  :     Pop           
//  result
131  :     LoadLocalVar  : var = 4(result)
//  ", "
132  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
133  :     OpConcat      
//  {x : 1; y : 1;}
134  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
135  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
136  :     UpdateProperty: propertyInfo = x<test::Point>
//  1
137  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
138  :     UpdateProperty: propertyInfo = y<test::Point>
//  l1
139  :     LoadLocalVar  : var = 0(l1)
//  l1.IndexOf({x : 1; y : 1;} of (Point))
140  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l1.IndexOf({x : 1; y : 1;} of (Point))
141  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l1.IndexOf({x : 1; y : 1;} of (Point)))
142  :     OpConcat      
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 1;} of (Point))))
143  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 1;} of (Point))))
144  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l1.IndexOf({x : 1; y : 1;} of (Point))));
145  :     Pop           
//  result
146  :     LoadLocalVar  : var = 4(result)
//  ", "
147  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
148  :     OpConcat      
//  {x : 0; y : 0;}
149  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  0
150  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
151  :     UpdateProperty: propertyInfo = x<test::Point>
//  0
152  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
153  :     UpdateProperty: propertyInfo = y<test::Point>
//  m1
154  :     LoadLocalVar  : var = 2(m1)
//  m1[{x : 0; y : 0;} of (Point)]
155  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m1[{x : 0; y : 0;} of (Point)]
156  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m1[{x : 0; y : 0;} of (Point)])
157  :     OpConcat      
//  (result = ((result & ", ") & m1[{x : 0; y : 0;} of (Point)]))
158  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m1[{x : 0; y : 0;} of (Point)]))
159  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m1[{x : 0; y : 0;} of (Point)]));
160  :     Pop           
//  result
161  :     LoadLocalVar  : var = 4(result)
//  ", "
162  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
163  :     OpConcat      
//  {x : 1; y : 0;}
164  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
165  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 0;}
166  :     UpdateProperty: propertyInfo = x<test::Point>
//  0
167  :     LoadValue     : value = <I8, 0>
//  {x : 1; y : 0;}
168  :     UpdateProperty: propertyInfo = y<test::Point>
//  m1
169  :     LoadLocalVar  : var = 2(m1)
//  m1[{x : 1; y : 0;} of (Point)]
170  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m1[{x : 1; y : 0;} of (Point)]
171  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m1[{x : 1; y : 0;} of (Point)])
172  :     OpConcat      
//  (result = ((result & ", ") & m1[{x : 1; y : 0;} of (Point)]))
173  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m1[{x : 1; y : 0;} of (Point)]))
174  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m1[{x : 1; y : 0;} of (Point)]));
175  :     Pop           
//  result
176  :     LoadLocalVar  : var = 4(result)
//  ", "
177  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
178  :     OpConcat      
//  {x : 0; y : 1;}
179  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  0
180  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 1;}
181  :     UpdateProperty: propertyInfo = x<test::Point>
//  1
182  :     LoadValue     : value = <I8, 1>
//  {x : 0; y : 1;}
183  :     UpdateProperty: propertyInfo = y<test::Point>
//  m1
184  :     LoadLocalVar  : var = 2(m1)
//  m1[{x : 0; y : 1;} of (Point)]
185  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m1[{x : 0; y : 1;} of (Point)]
186  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m1[{x : 0; y : 1;} of (Point)])
187  :     OpConcat      
//  (result = ((result & ", ") & m1[{x : 0; y : 1;} of (Point)]))
188  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m1[{x : 0; y : 1;} of (Point)]))
189  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m1[{x : 0; y : 1;} of (Point)]));
190  :     Pop           
//  result
191  :     LoadLocalVar  : var = 4(result)
//  ", "
192  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
193  :     OpConcat      
//  {x : 1; y : 1;}
194  :     CreateStruct  : flag = BoxedValue, typeDescriptor = test::Point
//  1
195  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
196  :     UpdateProperty: propertyInfo = x<test::Point>
//  1
197  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
198  :     UpdateProperty: propertyInfo = y<test::Point>
//  m1
199  :     LoadLocalVar  : var = 2(m1)
//  m1[{x : 1; y : 1;} of (Point)]
200  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m1[{x : 1; y : 1;} of (Point)]
201  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m1[{x : 1; y : 1;} of (Point)])
202  :     OpConcat      
//  (result = ((result & ", ") & m1[{x : 1; y : 1;} of (Point)]))
203  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m1[{x : 1; y : 1;} of (Point)]))
204  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m1[{x : 1; y : 1;} of (Point)]));
205  :     Pop           
//  result
206  :     LoadLocalVar  : var = 4(result)
//  ", "
207  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
208  :     OpConcat      
//  {x : 0; y : 0;}
209  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  0
210  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
211  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  0
212  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
213  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  l2
214  :     LoadLocalVar  : var = 1(l2)
//  l2.IndexOf({x : 0; y : 0;} of (IndexPoint))
215  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l2.IndexOf({x : 0; y : 0;} of (IndexPoint))
216  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l2.IndexOf({x : 0; y : 0;} of (IndexPoint)))
217  :     OpConcat      
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 0;} of (IndexPoint))))
218  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 0;} of (IndexPoint))))
219  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 0;} of (IndexPoint))));
220  :     Pop           
//  result
221  :     LoadLocalVar  : var = 4(result)
//  ", "
222  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
223  :     OpConcat      
//  {x : 1; y : 0;}
224  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
225  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 0;}
226  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  0
227  :     LoadValue     : value = <I8, 0>
//  {x : 1; y : 0;}
228  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  l2
229  :     LoadLocalVar  : var = 1(l2)
//  l2.IndexOf({x : 1; y : 0;} of (IndexPoint))
230  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l2.IndexOf({x : 1; y : 0;} of (IndexPoint))
231  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l2.IndexOf({x : 1; y : 0;} of (IndexPoint)))
232  :     OpConcat      
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 0;} of (IndexPoint))))
233  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 0;} of (IndexPoint))))
234  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 0;} of (IndexPoint))));
235  :     Pop           
//  result
236  :     LoadLocalVar  : var = 4(result)
//  ", "
237  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
238  :     OpConcat      
//  {x : 0; y : 1;}
239  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  0
240  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 1;}
241  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
242  :     LoadValue     : value = <I8, 1>
//  {x : 0; y : 1;}
243  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  l2
244  :     LoadLocalVar  : var = 1(l2)
//  l2.IndexOf({x : 0; y : 1;} of (IndexPoint))
245  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l2.IndexOf({x : 0; y : 1;} of (IndexPoint))
246  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l2.IndexOf({x : 0; y : 1;} of (IndexPoint)))
247  :     OpConcat      
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 1;} of (IndexPoint))))
248  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 1;} of (IndexPoint))))
249  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l2.IndexOf({x : 0; y : 1;} of (IndexPoint))));
250  :     Pop           
//  result
251  :     LoadLocalVar  : var = 4(result)
//  ", "
252  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
253  :     OpConcat      
//  {x : 1; y : 1;}
254  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
255  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
256  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
257  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
258  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  l2
259  :     LoadLocalVar  : var = 1(l2)
//  l2.IndexOf({x : 1; y : 1;} of (IndexPoint))
260  :     InvokeMethod  : methodInfo = IndexOf<system::ReadonlyList>, stackPatternCount = 1
//  l2.IndexOf({x : 1; y : 1;} of (IndexPoint))
261  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & l2.IndexOf({x : 1; y : 1;} of (IndexPoint)))
262  :     OpConcat      
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 1;} of (IndexPoint))))
263  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 1;} of (IndexPoint))))
264  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & l2.IndexOf({x : 1; y : 1;} of (IndexPoint))));
265  :     Pop           
//  result
266  :     LoadLocalVar  : var = 4(result)
//  ", "
267  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
268  :     OpConcat      
//  {x : 0; y : 0;}
269  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  0
270  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
271  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  0
272  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 0;}
273  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  m2
274  :     LoadLocalVar  : var = 3(m2)
//  m2[{x : 0; y : 0;} of (IndexPoint)]
275  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m2[{x : 0; y : 0;} of (IndexPoint)]
276  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m2[{x : 0; y : 0;} of (IndexPoint)])
277  :     OpConcat      
//  (result = ((result & ", ") & m2[{x : 0; y : 0;} of (IndexPoint)]))
278  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m2[{x : 0; y : 0;} of (IndexPoint)]))
279  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m2[{x : 0; y : 0;} of (IndexPoint)]));
280  :     Pop           
//  result
281  :     LoadLocalVar  : var = 4(result)
//  ", "
282  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
283  :     OpConcat      
//  {x : 1; y : 0;}
284  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
285  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 0;}
286  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  0
287  :     LoadValue     : value = <I8, 0>
//  {x : 1; y : 0;}
288  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  m2
289  :     LoadLocalVar  : var = 3(m2)
//  m2[{x : 1; y : 0;} of (IndexPoint)]
290  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m2[{x : 1; y : 0;} of (IndexPoint)]
291  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m2[{x : 1; y : 0;} of (IndexPoint)])
292  :     OpConcat      
//  (result = ((result & ", ") & m2[{x : 1; y : 0;} of (IndexPoint)]))
293  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m2[{x : 1; y : 0;} of (IndexPoint)]))
294  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m2[{x : 1; y : 0;} of (IndexPoint)]));
295  :     Pop           
//  result
296  :     LoadLocalVar  : var = 4(result)
//  ", "
297  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
298  :     OpConcat      
//  {x : 0; y : 1;}
299  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  0
300  :     LoadValue     : value = <I8, 0>
//  {x : 0; y : 1;}
301  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
302  :     LoadValue     : value = <I8, 1>
//  {x : 0; y : 1;}
303  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  m2
304  :     LoadLocalVar  : var = 3(m2)
//  m2[{x : 0; y : 1;} of (IndexPoint)]
305  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m2[{x : 0; y : 1;} of (IndexPoint)]
306  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m2[{x : 0; y : 1;} of (IndexPoint)])
307  :     OpConcat      
//  (result = ((result & ", ") & m2[{x : 0; y : 1;} of (IndexPoint)]))
308  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m2[{x : 0; y : 1;} of (IndexPoint)]))
309  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m2[{x : 0; y : 1;} of (IndexPoint)]));
310  :     Pop           
//  result
311  :     LoadLocalVar  : var = 4(result)
//  ", "
312  :     LoadValue     : value = <Bool, , >
//  (result & ", ")
313  :     OpConcat      
//  {x : 1; y : 1;}
314  :     CreateStruct  : flag = BoxedValue, typeDescriptor = IndexPoint
//  1
315  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
316  :     UpdateProperty: propertyInfo = x<IndexPoint>
//  1
317  :     LoadValue     : value = <I8, 1>
//  {x : 1; y : 1;}
318  :     UpdateProperty: propertyInfo = y<IndexPoint>
//  m2
319  :     LoadLocalVar  : var = 3(m2)
//  m2[{x : 1; y : 1;} of (IndexPoint)]
320  :     InvokeMethod  : methodInfo = Get<system::ReadonlyDictionary>, stackPatternCount = 1
//  m2[{x : 1; y : 1;} of (IndexPoint)]
321  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((result & ", ") & m2[{x : 1; y : 1;} of (IndexPoint)])
322  :     OpConcat      
//  (result = ((result & ", ") & m2[{x : 1; y : 1;} of (IndexPoint)]))
323  :     Duplicate     : stackPatternCount = 0
//  (result = ((result & ", ") & m2[{x : 1; y : 1;} of (IndexPoint)]))
324  :     StoreLocalVar : var = 4(result)
//  (result = ((result & ", ") & m2[{x : 1; y : 1;} of (IndexPoint)]));
325  :     Pop           
//  result
326  :     LoadLocalVar  : var = 4(result)
//  return result;
327  :     Return        
//  func main() : (string)
328  :     LoadValue     : value = <null>
//  func main() : (string)
329  :     Return        
