========================================================
Global Variables:
========================================================

========================================================
Functions:
========================================================
OuterClass2::Base2::Initialize (2 .. 38)
    Arguments:
        derived
    Captured Variables:
        <captured-this>0
    Local Variables:

OuterClass2::Base2::#ctor (261 .. 268)
    Arguments:
    Captured Variables:
        <captured-this>0
    Local Variables:

OuterClass2::#ctor (269 .. 270)
    Arguments:
    Captured Variables:
        <captured-this>0
    Local Variables:

Derived2::#ctor (271 .. 291)
    Arguments:
    Captured Variables:
        <captured-this>0
    Local Variables:

Derived2::Execute (292 .. 318)
    Arguments:
    Captured Variables:
        <captured-this>0
    Local Variables:

main (319 .. 329)
    Arguments:
    Captured Variables:
    Local Variables:
        derived

<initialize> (0 .. 1)
    Arguments:
    Captured Variables:
    Local Variables:

<method:<bind-activator><system::Subscription>(7)> in OuterClass2::Base2::Initialize (39 .. 53)
    Arguments:
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:
        <bind-activator-result>

<method:<bind-callback>0_0<system::Subscription>(8)> in OuterClass2::Base2::Initialize (54 .. 57)
    Arguments:
        <bind-callback-argument>0
        <bind-callback-argument>1
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:<bind-callback>1_0<system::Subscription>(9)> in OuterClass2::Base2::Initialize (58 .. 61)
    Arguments:
        <bind-callback-argument>0
        <bind-callback-argument>1
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:<bind-callback>2_0<system::Subscription>(10)> in OuterClass2::Base2::Initialize (62 .. 65)
    Arguments:
        <bind-callback-argument>0
        <bind-callback-argument>1
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:Open<system::Subscription>(15)> in OuterClass2::Base2::Initialize (66 .. 143)
    Arguments:
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:Update<system::Subscription>(16)> in OuterClass2::Base2::Initialize (144 .. 158)
    Arguments:
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<method:Close<system::Subscription>(17)> in OuterClass2::Base2::Initialize (159 .. 242)
    Arguments:
    Captured Variables:
        <captured><bind-cache>0
        <captured><bind-cache>1
        <captured><bind-cache>2
        <captured><bind-handler>0_0
        <captured><bind-handler>1_0
        <captured><bind-handler>2_0
        <captured><bind-opened>
        <captured><bind-closed>
        <captured>derived
        <captured-this>0
        <captured-this>1
    Local Variables:

<lambda:(14)> in OuterClass2::Base2::Initialize (243 .. 260)
    Arguments:
        value
    Captured Variables:
        <captured-this>0
    Local Variables:

========================================================
Instructions:
========================================================
0    :     LoadValue     : value = <null>
1    :     Return        
//  null
2    :     LoadValue     : value = <null>
//  null
3    :     LoadValue     : value = <null>
//  null
4    :     LoadValue     : value = <null>
//  null
5    :     LoadValue     : value = <null>
//  null
6    :     LoadValue     : value = <null>
//  null
7    :     LoadValue     : value = <null>
//  false
8    :     LoadValue     : value = <Bool, false>
//  false
9    :     LoadValue     : value = <Bool, false>
//  new (::system::Subscription^)
10   :     LoadLocalVar  : var = 0(derived)
//  new (::system::Subscription^)
11   :     LoadCapturedVar: var = 0(<captured-this>0)
//  new (::system::Subscription^)
12   :     LoadValue     : value = <null>
//  new (::system::Subscription^)
13   :     CreateClosureContext: stackPatternCount = 11
//  new (::system::Subscription^)
14   :     LoadMethodInfo: methodInfo = Open<system::Subscription>
//  func Open() : (::system::Boolean)
15   :     LoadFunction  : func = 11(<method:Open<system::Subscription>(15)> in OuterClass2::Base2::Initialize)
//  new (::system::Subscription^)
16   :     LoadMethodInfo: methodInfo = Update<system::Subscription>
//  func Update() : (::system::Boolean)
17   :     LoadFunction  : func = 12(<method:Update<system::Subscription>(16)> in OuterClass2::Base2::Initialize)
//  new (::system::Subscription^)
18   :     LoadMethodInfo: methodInfo = Close<system::Subscription>
//  func Close() : (::system::Boolean)
19   :     LoadFunction  : func = 13(<method:Close<system::Subscription>(17)> in OuterClass2::Base2::Initialize)
//  new (::system::Subscription^)
20   :     CreateInterface: methodInfo = <system::Subscription>, stackPatternCount = 6
//  (subscription = new (::system::Subscription^)
21   :     Duplicate     : stackPatternCount = 0
//  (subscription = new (::system::Subscription^)
22   :     LoadCapturedVar: var = 0(<captured-this>0)
//  (subscription = new (::system::Subscription^)
23   :     SetProperty   : propertyInfo = subscription<OuterClass2::Base2>
//  (subscription = new (::system::Subscription^)
24   :     Pop           
//  subscription
25   :     LoadCapturedVar: var = 0(<captured-this>0)
//  subscription
26   :     GetProperty   : propertyInfo = subscription<OuterClass2::Base2>
//  subscription.Open()
27   :     InvokeMethod  : methodInfo = Open<system::Subscription>, stackPatternCount = 0
//  subscription.Open();
28   :     Pop           
//  subscription
29   :     LoadCapturedVar: var = 0(<captured-this>0)
//  subscription
30   :     GetProperty   : propertyInfo = subscription<OuterClass2::Base2>
//  func (value : object) : (void)
31   :     LoadCapturedVar: var = 0(<captured-this>0)
//  func (value : object) : (void)
32   :     CreateClosureContext: stackPatternCount = 1
//  func (value : object) : (void)
33   :     LoadFunction  : func = 14(<lambda:(14)> in OuterClass2::Base2::Initialize)
//  func (value : object) : (void)
34   :     CreateClosure 
//  attach(subscription.ValueChanged, func (value : object) : (void)
35   :     AttachEvent   : eventInfo = ValueChanged<system::Subscription>
//  attach(subscription.ValueChanged, func (value : object) : (void)
36   :     Pop           
//  func Initialize(derived : Derived2*) : (void)
37   :     LoadValue     : value = <null>
//  func Initialize(derived : Derived2*) : (void)
38   :     Return        
//  <bind-cache>0
39   :     LoadCapturedVar: var = 0(<captured><bind-cache>0)
//  <bind-cache>0.Value
40   :     InvokeMethod  : methodInfo = GetValue<test::ObservableValue>, stackPatternCount = 0
//  <bind-cache>1
41   :     LoadCapturedVar: var = 1(<captured><bind-cache>1)
//  <bind-cache>1.Value
42   :     InvokeMethod  : methodInfo = GetValue<test::ObservableValue>, stackPatternCount = 0
//  (<bind-cache>0.Value + <bind-cache>1.Value)
43   :     OpAdd         : type = I8
//  <bind-cache>2
44   :     LoadCapturedVar: var = 2(<captured><bind-cache>2)
//  <bind-cache>2.Value
45   :     InvokeMethod  : methodInfo = GetValue<test::ObservableValue>, stackPatternCount = 0
//  ((<bind-cache>0.Value + <bind-cache>1.Value) + <bind-cache>2.Value)
46   :     OpAdd         : type = I8
//  var <bind-activator-result> = ((<bind-cache>0.Value + <bind-cache>1.Value) + <bind-cache>2.Value);
47   :     StoreLocalVar : var = 0(<bind-activator-result>)
//  <bind-activator-result>
48   :     LoadLocalVar  : var = 0(<bind-activator-result>)
//  ValueChanged(<bind-activator-result>)
49   :     LoadCapturedVar: var = 10(<captured-this>1)
//  ValueChanged(<bind-activator-result>)
50   :     InvokeEvent   : eventInfo = ValueChanged<system::Subscription>, stackPatternCount = 1
//  ValueChanged(<bind-activator-result>);
51   :     Pop           
//  func <bind-activator>() : (::system::Void)
52   :     LoadValue     : value = <null>
//  func <bind-activator>() : (::system::Void)
53   :     Return        
//  <bind-activator>()
54   :     InvokeWithContext: func = 7(<method:<bind-activator><system::Subscription>(7)> in OuterClass2::Base2::Initialize), stackPatternCount = 0
//  <bind-activator>();
55   :     Pop           
//  func <bind-callback>0_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
56   :     LoadValue     : value = <null>
//  func <bind-callback>0_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
57   :     Return        
//  <bind-activator>()
58   :     InvokeWithContext: func = 7(<method:<bind-activator><system::Subscription>(7)> in OuterClass2::Base2::Initialize), stackPatternCount = 0
//  <bind-activator>();
59   :     Pop           
//  func <bind-callback>1_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
60   :     LoadValue     : value = <null>
//  func <bind-callback>1_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
61   :     Return        
//  <bind-activator>()
62   :     InvokeWithContext: func = 7(<method:<bind-activator><system::Subscription>(7)> in OuterClass2::Base2::Initialize), stackPatternCount = 0
//  <bind-activator>();
63   :     Pop           
//  func <bind-callback>2_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
64   :     LoadValue     : value = <null>
//  func <bind-callback>2_0(<bind-callback-argument>0 : ::system::Int64, <bind-callback-argument>1 : ::system::Int64) : (::system::Void)
65   :     Return        
//  <bind-opened>
66   :     LoadCapturedVar: var = 6(<captured><bind-opened>)
//  (!<bind-opened>)
67   :     OpNot         : type = Bool
//  if ((!<bind-opened>))
68   :     OpNot         : type = Bool
//  if ((!<bind-opened>))
69   :     JumpIf        : label = 140
//  true
70   :     LoadValue     : value = <Bool, true>
//  (<bind-opened> = true)
71   :     Duplicate     : stackPatternCount = 0
//  (<bind-opened> = true)
72   :     StoreCapturedVar: var = 6
//  (<bind-opened> = true);
73   :     Pop           
//  (derived.x ?? null of (::test::ObservableValue^))
74   :     InstallTry    : label = 79
//  derived
75   :     LoadCapturedVar: var = 8(<captured>derived)
//  derived.x
76   :     GetProperty   : propertyInfo = x<Derived2>
//  (derived.x ?? null of (::test::ObservableValue^))
77   :     UninstallTry  : stackPatternCount = 1
//  (derived.x ?? null of (::test::ObservableValue^))
78   :     Jump          : label = 80
//  null
79   :     LoadValue     : value = <null>
//  (<bind-cache>0 = (derived.x ?? null of (::test::ObservableValue^)))
80   :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>0 = (derived.x ?? null of (::test::ObservableValue^)))
81   :     StoreCapturedVar: var = 0
//  (<bind-cache>0 = (derived.x ?? null of (::test::ObservableValue^)));
82   :     Pop           
//  (derived.y ?? null of (::test::ObservableValue^))
83   :     InstallTry    : label = 88
//  derived
84   :     LoadCapturedVar: var = 8(<captured>derived)
//  derived.y
85   :     GetProperty   : propertyInfo = y<Derived2>
//  (derived.y ?? null of (::test::ObservableValue^))
86   :     UninstallTry  : stackPatternCount = 1
//  (derived.y ?? null of (::test::ObservableValue^))
87   :     Jump          : label = 89
//  null
88   :     LoadValue     : value = <null>
//  (<bind-cache>1 = (derived.y ?? null of (::test::ObservableValue^)))
89   :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>1 = (derived.y ?? null of (::test::ObservableValue^)))
90   :     StoreCapturedVar: var = 1
//  (<bind-cache>1 = (derived.y ?? null of (::test::ObservableValue^)));
91   :     Pop           
//  (derived.z ?? null of (::test::ObservableValue^))
92   :     InstallTry    : label = 97
//  derived
93   :     LoadCapturedVar: var = 8(<captured>derived)
//  derived.z
94   :     GetProperty   : propertyInfo = z<Derived2>
//  (derived.z ?? null of (::test::ObservableValue^))
95   :     UninstallTry  : stackPatternCount = 1
//  (derived.z ?? null of (::test::ObservableValue^))
96   :     Jump          : label = 98
//  null
97   :     LoadValue     : value = <null>
//  (<bind-cache>2 = (derived.z ?? null of (::test::ObservableValue^)))
98   :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>2 = (derived.z ?? null of (::test::ObservableValue^)))
99   :     StoreCapturedVar: var = 2
//  (<bind-cache>2 = (derived.z ?? null of (::test::ObservableValue^)));
100  :     Pop           
//  (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null)
101  :     InstallTry    : label = 109
//  <bind-cache>0
102  :     LoadCapturedVar: var = 0(<captured><bind-cache>0)
//  <bind-callback>0_0
103  :     LoadClosureContext
//  <bind-callback>0_0
104  :     LoadFunction  : func = 8(<method:<bind-callback>0_0<system::Subscription>(8)> in OuterClass2::Base2::Initialize)
//  <bind-callback>0_0
105  :     CreateClosure 
//  attach(<bind-cache>0.ValueChanged, <bind-callback>0_0)
106  :     AttachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null)
107  :     UninstallTry  : stackPatternCount = 1
//  (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null)
108  :     Jump          : label = 110
//  null
109  :     LoadValue     : value = <null>
//  (<bind-handler>0_0 = (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null))
110  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>0_0 = (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null))
111  :     StoreCapturedVar: var = 3
//  (<bind-handler>0_0 = (attach(<bind-cache>0.ValueChanged, <bind-callback>0_0) ?? null));
112  :     Pop           
//  (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null)
113  :     InstallTry    : label = 121
//  <bind-cache>1
114  :     LoadCapturedVar: var = 1(<captured><bind-cache>1)
//  <bind-callback>1_0
115  :     LoadClosureContext
//  <bind-callback>1_0
116  :     LoadFunction  : func = 9(<method:<bind-callback>1_0<system::Subscription>(9)> in OuterClass2::Base2::Initialize)
//  <bind-callback>1_0
117  :     CreateClosure 
//  attach(<bind-cache>1.ValueChanged, <bind-callback>1_0)
118  :     AttachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null)
119  :     UninstallTry  : stackPatternCount = 1
//  (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null)
120  :     Jump          : label = 122
//  null
121  :     LoadValue     : value = <null>
//  (<bind-handler>1_0 = (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null))
122  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>1_0 = (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null))
123  :     StoreCapturedVar: var = 4
//  (<bind-handler>1_0 = (attach(<bind-cache>1.ValueChanged, <bind-callback>1_0) ?? null));
124  :     Pop           
//  (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null)
125  :     InstallTry    : label = 133
//  <bind-cache>2
126  :     LoadCapturedVar: var = 2(<captured><bind-cache>2)
//  <bind-callback>2_0
127  :     LoadClosureContext
//  <bind-callback>2_0
128  :     LoadFunction  : func = 10(<method:<bind-callback>2_0<system::Subscription>(10)> in OuterClass2::Base2::Initialize)
//  <bind-callback>2_0
129  :     CreateClosure 
//  attach(<bind-cache>2.ValueChanged, <bind-callback>2_0)
130  :     AttachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null)
131  :     UninstallTry  : stackPatternCount = 1
//  (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null)
132  :     Jump          : label = 134
//  null
133  :     LoadValue     : value = <null>
//  (<bind-handler>2_0 = (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null))
134  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>2_0 = (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null))
135  :     StoreCapturedVar: var = 5
//  (<bind-handler>2_0 = (attach(<bind-cache>2.ValueChanged, <bind-callback>2_0) ?? null));
136  :     Pop           
//  true
137  :     LoadValue     : value = <Bool, true>
//  return true;
138  :     Return        
//  if ((!<bind-opened>))
139  :     Jump          : label = 140
//  false
140  :     LoadValue     : value = <Bool, false>
//  return false;
141  :     Return        
//  func Open() : (::system::Boolean)
142  :     LoadValue     : value = <null>
//  func Open() : (::system::Boolean)
143  :     Return        
//  <bind-opened>
144  :     LoadCapturedVar: var = 6(<captured><bind-opened>)
//  <bind-closed>
145  :     LoadCapturedVar: var = 7(<captured><bind-closed>)
//  (!<bind-closed>)
146  :     OpNot         : type = Bool
//  (<bind-opened> and (!<bind-closed>))
147  :     OpAnd         : type = Bool
//  if ((<bind-opened> and (!<bind-closed>)))
148  :     OpNot         : type = Bool
//  if ((<bind-opened> and (!<bind-closed>)))
149  :     JumpIf        : label = 155
//  <bind-activator>()
150  :     InvokeWithContext: func = 7(<method:<bind-activator><system::Subscription>(7)> in OuterClass2::Base2::Initialize), stackPatternCount = 0
//  <bind-activator>();
151  :     Pop           
//  true
152  :     LoadValue     : value = <Bool, true>
//  return true;
153  :     Return        
//  if ((<bind-opened> and (!<bind-closed>)))
154  :     Jump          : label = 155
//  false
155  :     LoadValue     : value = <Bool, false>
//  return false;
156  :     Return        
//  func Update() : (::system::Boolean)
157  :     LoadValue     : value = <null>
//  func Update() : (::system::Boolean)
158  :     Return        
//  <bind-closed>
159  :     LoadCapturedVar: var = 7(<captured><bind-closed>)
//  (!<bind-closed>)
160  :     OpNot         : type = Bool
//  if ((!<bind-closed>))
161  :     OpNot         : type = Bool
//  if ((!<bind-closed>))
162  :     JumpIf        : label = 239
//  true
163  :     LoadValue     : value = <Bool, true>
//  (<bind-closed> = true)
164  :     Duplicate     : stackPatternCount = 0
//  (<bind-closed> = true)
165  :     StoreCapturedVar: var = 7
//  (<bind-closed> = true);
166  :     Pop           
//  <bind-handler>0_0
167  :     LoadCapturedVar: var = 3(<captured><bind-handler>0_0)
//  <bind-handler>0_0 is not null
168  :     LoadValue     : value = <null>
//  <bind-handler>0_0 is not null
169  :     CompareReference
//  <bind-handler>0_0 is not null
170  :     OpNot         : type = Bool
//  if (<bind-handler>0_0 is not null)
171  :     OpNot         : type = Bool
//  if (<bind-handler>0_0 is not null)
172  :     JumpIf        : label = 182
//  <bind-cache>0
173  :     LoadCapturedVar: var = 0(<captured><bind-cache>0)
//  <bind-handler>0_0
174  :     LoadCapturedVar: var = 3(<captured><bind-handler>0_0)
//  detach(<bind-cache>0.ValueChanged, <bind-handler>0_0)
175  :     DetachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  detach(<bind-cache>0.ValueChanged, <bind-handler>0_0);
176  :     Pop           
//  null
177  :     LoadValue     : value = <null>
//  (<bind-handler>0_0 = null)
178  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>0_0 = null)
179  :     StoreCapturedVar: var = 3
//  (<bind-handler>0_0 = null);
180  :     Pop           
//  if (<bind-handler>0_0 is not null)
181  :     Jump          : label = 182
//  <bind-handler>1_0
182  :     LoadCapturedVar: var = 4(<captured><bind-handler>1_0)
//  <bind-handler>1_0 is not null
183  :     LoadValue     : value = <null>
//  <bind-handler>1_0 is not null
184  :     CompareReference
//  <bind-handler>1_0 is not null
185  :     OpNot         : type = Bool
//  if (<bind-handler>1_0 is not null)
186  :     OpNot         : type = Bool
//  if (<bind-handler>1_0 is not null)
187  :     JumpIf        : label = 197
//  <bind-cache>1
188  :     LoadCapturedVar: var = 1(<captured><bind-cache>1)
//  <bind-handler>1_0
189  :     LoadCapturedVar: var = 4(<captured><bind-handler>1_0)
//  detach(<bind-cache>1.ValueChanged, <bind-handler>1_0)
190  :     DetachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  detach(<bind-cache>1.ValueChanged, <bind-handler>1_0);
191  :     Pop           
//  null
192  :     LoadValue     : value = <null>
//  (<bind-handler>1_0 = null)
193  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>1_0 = null)
194  :     StoreCapturedVar: var = 4
//  (<bind-handler>1_0 = null);
195  :     Pop           
//  if (<bind-handler>1_0 is not null)
196  :     Jump          : label = 197
//  <bind-handler>2_0
197  :     LoadCapturedVar: var = 5(<captured><bind-handler>2_0)
//  <bind-handler>2_0 is not null
198  :     LoadValue     : value = <null>
//  <bind-handler>2_0 is not null
199  :     CompareReference
//  <bind-handler>2_0 is not null
200  :     OpNot         : type = Bool
//  if (<bind-handler>2_0 is not null)
201  :     OpNot         : type = Bool
//  if (<bind-handler>2_0 is not null)
202  :     JumpIf        : label = 212
//  <bind-cache>2
203  :     LoadCapturedVar: var = 2(<captured><bind-cache>2)
//  <bind-handler>2_0
204  :     LoadCapturedVar: var = 5(<captured><bind-handler>2_0)
//  detach(<bind-cache>2.ValueChanged, <bind-handler>2_0)
205  :     DetachEvent   : eventInfo = ValueChanged<test::ObservableValue>
//  detach(<bind-cache>2.ValueChanged, <bind-handler>2_0);
206  :     Pop           
//  null
207  :     LoadValue     : value = <null>
//  (<bind-handler>2_0 = null)
208  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>2_0 = null)
209  :     StoreCapturedVar: var = 5
//  (<bind-handler>2_0 = null);
210  :     Pop           
//  if (<bind-handler>2_0 is not null)
211  :     Jump          : label = 212
//  null
212  :     LoadValue     : value = <null>
//  (<bind-cache>0 = null of (::test::ObservableValue^))
213  :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>0 = null of (::test::ObservableValue^))
214  :     StoreCapturedVar: var = 0
//  (<bind-cache>0 = null of (::test::ObservableValue^));
215  :     Pop           
//  null
216  :     LoadValue     : value = <null>
//  (<bind-cache>1 = null of (::test::ObservableValue^))
217  :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>1 = null of (::test::ObservableValue^))
218  :     StoreCapturedVar: var = 1
//  (<bind-cache>1 = null of (::test::ObservableValue^));
219  :     Pop           
//  null
220  :     LoadValue     : value = <null>
//  (<bind-cache>2 = null of (::test::ObservableValue^))
221  :     Duplicate     : stackPatternCount = 0
//  (<bind-cache>2 = null of (::test::ObservableValue^))
222  :     StoreCapturedVar: var = 2
//  (<bind-cache>2 = null of (::test::ObservableValue^));
223  :     Pop           
//  null
224  :     LoadValue     : value = <null>
//  (<bind-handler>0_0 = null of (::system::reflection::EventHandler^))
225  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>0_0 = null of (::system::reflection::EventHandler^))
226  :     StoreCapturedVar: var = 3
//  (<bind-handler>0_0 = null of (::system::reflection::EventHandler^));
227  :     Pop           
//  null
228  :     LoadValue     : value = <null>
//  (<bind-handler>1_0 = null of (::system::reflection::EventHandler^))
229  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>1_0 = null of (::system::reflection::EventHandler^))
230  :     StoreCapturedVar: var = 4
//  (<bind-handler>1_0 = null of (::system::reflection::EventHandler^));
231  :     Pop           
//  null
232  :     LoadValue     : value = <null>
//  (<bind-handler>2_0 = null of (::system::reflection::EventHandler^))
233  :     Duplicate     : stackPatternCount = 0
//  (<bind-handler>2_0 = null of (::system::reflection::EventHandler^))
234  :     StoreCapturedVar: var = 5
//  (<bind-handler>2_0 = null of (::system::reflection::EventHandler^));
235  :     Pop           
//  true
236  :     LoadValue     : value = <Bool, true>
//  return true;
237  :     Return        
//  if ((!<bind-closed>))
238  :     Jump          : label = 239
//  false
239  :     LoadValue     : value = <Bool, false>
//  return false;
240  :     Return        
//  func Close() : (::system::Boolean)
241  :     LoadValue     : value = <null>
//  func Close() : (::system::Boolean)
242  :     Return        
//  ""
243  :     LoadValue     : value = <String, >
//  s
244  :     LoadCapturedVar: var = 0(<captured-this>0)
//  s
245  :     GetProperty   : propertyInfo = s<OuterClass2::Base2>
//  ("" & s)
246  :     OpConcat      
//  "["
247  :     LoadValue     : value = <String, [>
//  (("" & s) & "[")
248  :     OpConcat      
//  value
249  :     LoadLocalVar  : var = 0(value)
//  value
250  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::Int64
//  (cast (int) value)
251  :     ConvertToType : flag = BoxedValue, typeDescriptor = system::String
//  ((("" & s) & "[") & (cast (int) value))
252  :     OpConcat      
//  "]"
253  :     LoadValue     : value = <String, ]>
//  (((("" & s) & "[") & (cast (int) value)) & "]")
254  :     OpConcat      
//  (s = (((("" & s) & "[") & (cast (int) value)) & "]"))
255  :     Duplicate     : stackPatternCount = 0
//  (s = (((("" & s) & "[") & (cast (int) value)) & "]"))
256  :     LoadCapturedVar: var = 0(<captured-this>0)
//  (s = (((("" & s) & "[") & (cast (int) value)) & "]"))
257  :     SetProperty   : propertyInfo = s<OuterClass2::Base2>
//  (s = (((("" & s) & "[") & (cast (int) value)) & "]"));
258  :     Pop           
//  func (value : object) : (void)
259  :     LoadValue     : value = <null>
//  func (value : object) : (void)
260  :     Return        
//  null
261  :     LoadValue     : value = <null>
//  var subscription : Subscription^ = null;
262  :     LoadCapturedVar: var = 0(<captured-this>0)
//  var subscription : Subscription^ = null;
263  :     SetProperty   : propertyInfo = subscription<OuterClass2::Base2>
//  ""
264  :     LoadValue     : value = <String, >
//  var s : string = "";
265  :     LoadCapturedVar: var = 0(<captured-this>0)
//  var s : string = "";
266  :     SetProperty   : propertyInfo = s<OuterClass2::Base2>
//  new ()
267  :     LoadValue     : value = <null>
//  new ()
268  :     Return        
//  new ()
269  :     LoadValue     : value = <null>
//  new ()
270  :     Return        
//  new ()
271  :     LoadCapturedVar: var = 0(<captured-this>0)
//  new ()
272  :     InvokeBaseCtor: methodInfo = <OuterClass2::Base2>, stackPatternCount = 0
//  new ()
273  :     Pop           
//  new (ObservableValue^)()
274  :     LoadValue     : value = <null>
//  new (ObservableValue^)()
275  :     InvokeMethod  : methodInfo = <test::ObservableValue>, stackPatternCount = 0
//  var x : ObservableValue^ = new (ObservableValue^)();
276  :     LoadCapturedVar: var = 0(<captured-this>0)
//  var x : ObservableValue^ = new (ObservableValue^)();
277  :     SetProperty   : propertyInfo = x<Derived2>
//  new (ObservableValue^)()
278  :     LoadValue     : value = <null>
//  new (ObservableValue^)()
279  :     InvokeMethod  : methodInfo = <test::ObservableValue>, stackPatternCount = 0
//  var y : ObservableValue^ = new (ObservableValue^)();
280  :     LoadCapturedVar: var = 0(<captured-this>0)
//  var y : ObservableValue^ = new (ObservableValue^)();
281  :     SetProperty   : propertyInfo = y<Derived2>
//  new (ObservableValue^)()
282  :     LoadValue     : value = <null>
//  new (ObservableValue^)()
283  :     InvokeMethod  : methodInfo = <test::ObservableValue>, stackPatternCount = 0
//  var z : ObservableValue^ = new (ObservableValue^)();
284  :     LoadCapturedVar: var = 0(<captured-this>0)
//  var z : ObservableValue^ = new (ObservableValue^)();
285  :     SetProperty   : propertyInfo = z<Derived2>
//  this
286  :     LoadCapturedVar: var = 0(<captured-this>0)
//  Initialize(this)
287  :     LoadCapturedVar: var = 0(<captured-this>0)
//  Initialize(this)
288  :     InvokeMethod  : methodInfo = Initialize<OuterClass2::Base2>, stackPatternCount = 1
//  Initialize(this);
289  :     Pop           
//  new ()
290  :     LoadValue     : value = <null>
//  new ()
291  :     Return        
//  10
292  :     LoadValue     : value = <I8, 10>
//  (x.Value = 10)
293  :     Duplicate     : stackPatternCount = 0
//  x
294  :     LoadCapturedVar: var = 0(<captured-this>0)
//  x
295  :     GetProperty   : propertyInfo = x<Derived2>
//  (x.Value = 10)
296  :     InvokeMethod  : methodInfo = SetValue<test::ObservableValue>, stackPatternCount = 1
//  (x.Value = 10)
297  :     Pop           
//  (x.Value = 10);
298  :     Pop           
//  20
299  :     LoadValue     : value = <I8, 20>
//  (y.Value = 20)
300  :     Duplicate     : stackPatternCount = 0
//  y
301  :     LoadCapturedVar: var = 0(<captured-this>0)
//  y
302  :     GetProperty   : propertyInfo = y<Derived2>
//  (y.Value = 20)
303  :     InvokeMethod  : methodInfo = SetValue<test::ObservableValue>, stackPatternCount = 1
//  (y.Value = 20)
304  :     Pop           
//  (y.Value = 20);
305  :     Pop           
//  30
306  :     LoadValue     : value = <I8, 30>
//  (z.Value = 30)
307  :     Duplicate     : stackPatternCount = 0
//  z
308  :     LoadCapturedVar: var = 0(<captured-this>0)
//  z
309  :     GetProperty   : propertyInfo = z<Derived2>
//  (z.Value = 30)
310  :     InvokeMethod  : methodInfo = SetValue<test::ObservableValue>, stackPatternCount = 1
//  (z.Value = 30)
311  :     Pop           
//  (z.Value = 30);
312  :     Pop           
//  subscription
313  :     LoadCapturedVar: var = 0(<captured-this>0)
//  subscription
314  :     GetProperty   : propertyInfo = subscription<OuterClass2::Base2>
//  subscription.Close()
315  :     InvokeMethod  : methodInfo = Close<system::Subscription>, stackPatternCount = 0
//  subscription.Close();
316  :     Pop           
//  func Execute() : (void)
317  :     LoadValue     : value = <null>
//  func Execute() : (void)
318  :     Return        
//  new (Derived2^)()
319  :     LoadValue     : value = <null>
//  new (Derived2^)()
320  :     InvokeMethod  : methodInfo = <Derived2>, stackPatternCount = 0
//  var derived = new (Derived2^)();
321  :     StoreLocalVar : var = 0(derived)
//  derived
322  :     LoadLocalVar  : var = 0(derived)
//  derived.Execute()
323  :     InvokeMethod  : methodInfo = Execute<Derived2>, stackPatternCount = 0
//  derived.Execute();
324  :     Pop           
//  derived
325  :     LoadLocalVar  : var = 0(derived)
//  derived.s
326  :     GetProperty   : propertyInfo = s<OuterClass2::Base2>
//  return derived.s;
327  :     Return        
//  func main() : (string)
328  :     LoadValue     : value = <null>
//  func main() : (string)
329  :     Return        
